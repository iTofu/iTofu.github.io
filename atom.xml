<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LEO&#39;S NOTE</title>
  <subtitle>心有猛虎 | 细嗅蔷薇</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://note.leodev.me/"/>
  <updated>2016-03-22T10:27:51.000Z</updated>
  <id>http://note.leodev.me/</id>
  
  <author>
    <name>Leo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【iOS】Xcode 插件过时怎么办？</title>
    <link href="http://note.leodev.me/2016/03/22/iOS-Xcode-Plugins-Version-Support/"/>
    <id>http://note.leodev.me/2016/03/22/iOS-Xcode-Plugins-Version-Support/</id>
    <published>2016-03-22T09:07:49.000Z</published>
    <updated>2016-03-22T10:27:51.000Z</updated>
    
    <content type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;工欲善其事必先利其器。&lt;/blockquote&gt;

&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;打造一个强大的开发环境，是提升自身战斗力的绝佳途径！搞 iOS 开发的一定很熟悉 Xcode，作为 iOS 开发“官方唯一指定代理商”（此刻应有 &lt;a href=&quot;https://zh.wikipedia.org/wiki/XcodeGhost&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;XcodeGhost 事件&lt;/a&gt; 飘过），她还是很傲娇的！&lt;br&gt;Xcode 并没有像 &lt;a href=&quot;https://zh.wikipedia.org/wiki/Eclipse&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Eclipse&lt;/a&gt; 一样强大的拓展性，但好在她还提供了一个不错的拓展方式——插件。&lt;a href=&quot;https://github.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt; 上有很多非常不错的开源插件，像 &lt;a href=&quot;https://github.com/onevcat/VVDocumenter-Xcode&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;VVDocumenter&lt;/a&gt;、&lt;a href=&quot;https://github.com/FuzzyAutocomplete/FuzzyAutocompletePlugin&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FuzzyAutocompletePlugin&lt;/a&gt; 等等，极其好用，给赞给赞！&lt;/p&gt;
&lt;p&gt;但是自 Xcode 6.0 开始苹果就搞了个新的机制，大致呢就是插件需要声明支持的 Xcode 版本，不然 Xcode 不加载该插件。怎么声明呢？通过一个叫 DVTPlugInCompatibilityUUID 的东东讲下即可。我们大可等待作者把相应版本 Xcode 的 UUID 加入插件支持版本列表，也可以自己动手加进去，毕竟作者也很忙。。。&lt;br&gt;下面简单讲一下加入方法。（突然有种破解的感觉捏）&lt;/p&gt;
&lt;h2 id=&quot;加入方法&quot;&gt;&lt;a href=&quot;#加入方法&quot; class=&quot;headerlink&quot; title=&quot;加入方法&quot;&gt;&lt;/a&gt;加入方法&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;获取安装的 Xcode 的 UUID。&lt;br&gt;打开 Finder，依次进入 应用程序 -&amp;gt; Xcode -&amp;gt; 右击“显示包内容” -&amp;gt; Contents -&amp;gt; 打开 Info.plist，拷贝 Key 为 DVTPlugInCompatibilityUUID 的 Value 值。&lt;br&gt;如果你没有找到，可以在下方的“参考 UUIDs”列表中找下相应版本的 Xcode UUID 号添加。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;加入插件支持版本列表。&lt;br&gt;下载相应插件的项目，找到项目的 info.plist 文件，用 Xcode 打开，找到 Key 为 DVTPlugInCompatibilityUUIDs 的数组，如果没有就创建一个，把拷贝的 UUID 添加进去。&lt;br&gt;也可以直接用编辑器打开 info.plist 文件，同样把 UUID 拷贝相应位置即可。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;⌘ + R 运行即可，搞定！别忘了重启 Xcode。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;参考-UUIDs&quot;&gt;&lt;a href=&quot;#参考-UUIDs&quot; class=&quot;headerlink&quot; title=&quot;参考 UUIDs&quot;&gt;&lt;/a&gt;参考 UUIDs&lt;/h2&gt;&lt;p&gt;各版本 Xcode UUID 如下，你可以直接拷贝添加到插件项目的 info.plist 文件中：&lt;/p&gt;
  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;key&amp;gt;DVTPlugInCompatibilityUUIDs&amp;lt;/key&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;array&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;string&amp;gt;37B30044-3B14-46BA-ABAA-F01000C27B63&amp;lt;/string&amp;gt; &amp;lt;!-- 5.0      --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;string&amp;gt;640F884E-CE55-4B40-87C0-8869546CAB7A&amp;lt;/string&amp;gt; &amp;lt;!-- 5.1 DP   --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;string&amp;gt;A2E4D43F-41F4-4FB9-BB94-7177011C9AED&amp;lt;/string&amp;gt; &amp;lt;!-- 5.1      --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;string&amp;gt;AD68E85B-441B-4301-B564-A45E4919A6AD&amp;lt;/string&amp;gt; &amp;lt;!-- 6.0 Beta --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;string&amp;gt;C4A681B0-4A26-480E-93EC-1218098B9AA0&amp;lt;/string&amp;gt; &amp;lt;!-- 6.0 GM   --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;string&amp;gt;FEC992CC-CA4A-4CFD-8881-77300FCB848A&amp;lt;/string&amp;gt; &amp;lt;!-- 6.2 Beta --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;string&amp;gt;A16FF353-8441-459E-A50C-B071F53F51B7&amp;lt;/string&amp;gt; &amp;lt;!-- 6.2      --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;string&amp;gt;992275C1-432A-4CF7-B659-D84ED6D42D3F&amp;lt;/string&amp;gt; &amp;lt;!-- 6.3 Beta --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;string&amp;gt;9F75337B-21B4-4ADC-B558-F9CADF7073A7&amp;lt;/string&amp;gt; &amp;lt;!-- 6.3      --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;string&amp;gt;E969541F-E6F9-4D25-8158-72DC3545A6C6&amp;lt;/string&amp;gt; &amp;lt;!-- 6.3.2    --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;string&amp;gt;8DC44374-2B35-4C57-A6FE-2AD66A36AAD9&amp;lt;/string&amp;gt; &amp;lt;!-- 6.4 Beta --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;string&amp;gt;5EDAC44F-8E0B-42C9-9BEF-E9C12EEC4949&amp;lt;/string&amp;gt; &amp;lt;!-- 6.4 B4   --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;string&amp;gt;7FDF5C7A-131F-4ABB-9EDC-8C5F8F0B8A90&amp;lt;/string&amp;gt; &amp;lt;!-- 6.4      --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;string&amp;gt;AABB7188-E14E-4433-AD3B-5CD791EAD9A3&amp;lt;/string&amp;gt; &amp;lt;!-- 7.0 Beta --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;string&amp;gt;0420B86A-AA43-4792-9ED0-6FE0F2B16A13&amp;lt;/string&amp;gt; &amp;lt;!-- 7.0 GM   --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;string&amp;gt;CC0D0F4F-05B3-431A-8F33-F84AFCB2C651&amp;lt;/string&amp;gt; &amp;lt;!-- 7.1 Beta --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;string&amp;gt;7265231C-39B4-402C-89E1-16167C4CC990&amp;lt;/string&amp;gt; &amp;lt;!-- 7.1      --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;string&amp;gt;9AFF134A-08DC-4096-8CEE-62A4BB123046&amp;lt;/string&amp;gt; &amp;lt;!-- 7.2 Beta --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;string&amp;gt;F41BD31E-2683-44B8-AE7F-5F09E919790E&amp;lt;/string&amp;gt; &amp;lt;!-- 7.2      --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;string&amp;gt;ACA8656B-FEA8-4B6D-8E4A-93F4C95C362C&amp;lt;/string&amp;gt; &amp;lt;!-- 7.3      --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/array&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;联系与捐赠&quot;&gt;&lt;a href=&quot;#联系与捐赠&quot; class=&quot;headerlink&quot; title=&quot;联系与捐赠&quot;&gt;&lt;/a&gt;联系与捐赠&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Mail: devtip#163.com&lt;/li&gt;
&lt;li&gt;GitHub:    &lt;a href=&quot;https://github.com/LeoiOS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LeoiOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果你想对我的开发或是开源项目进行支持捐助，请扫描下方二维码，谢谢！👇&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/alipay.png&quot; alt=&quot;LEO&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;工欲善其事必先利其器。&lt;/blockquote&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://note.leodev.me/categories/iOS/"/>
    
      <category term="Xcode" scheme="http://note.leodev.me/categories/iOS/Xcode/"/>
    
    
      <category term="iOS" scheme="http://note.leodev.me/tags/iOS/"/>
    
      <category term="Xcode" scheme="http://note.leodev.me/tags/Xcode/"/>
    
  </entry>
  
  <entry>
    <title>Why Coding?</title>
    <link href="http://note.leodev.me/2016/03/11/Why-Coding/"/>
    <id>http://note.leodev.me/2016/03/11/Why-Coding/</id>
    <published>2016-03-11T10:22:58.000Z</published>
    <updated>2016-03-11T10:26:14.000Z</updated>
    
    <content type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;为什么要编程？&lt;br&gt;因为代码没在哪里。&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;为什么要编程？&lt;br&gt;因为代码没在哪里。&lt;/blockquote&gt;

    
    </summary>
    
      <category term="Time" scheme="http://note.leodev.me/categories/Time/"/>
    
    
      <category term="Time" scheme="http://note.leodev.me/tags/Time/"/>
    
  </entry>
  
  <entry>
    <title>【iOS】用 Swift 来写 Swift 的方法</title>
    <link href="http://note.leodev.me/2016/03/07/iOS-Swifty-methods/"/>
    <id>http://note.leodev.me/2016/03/07/iOS-Swifty-methods/</id>
    <published>2016-03-07T09:52:23.000Z</published>
    <updated>2016-03-22T10:00:46.000Z</updated>
    
    <content type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;甩掉 Objective-C 的历史包袱，做一名纯粹的 Swift 程序员。&lt;/blockquote&gt;

&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;绝大部分学习 Swift 的程序员都有一定的 Objective-C 的开发经历。在过去的时光里，很多人使用 Objective-C 开发 iOS 和 Mac 应用。如果你正在阅读这篇文章，那么你很有可能就是其中一员。我们很容易把写 Objective-C 时候的那一套心得照搬到 Swift 开发里，很容易把一些现有的习惯和想法应用到 Swift 中。但是，和 Objective-C 这个前任相比， Swift 是一门完全不同的语言，我们应该以一种全新的心态去对待它，而不应该一直带着以前的历史包袱。&lt;/p&gt;
&lt;p&gt;目前，有很多文章对 Swift 的新特性进行讲解，比如结构体、枚举类、元祖和泛型等等。有些人甚至尝试写一些函数式编程的代码，但是今天我想谈一些更细致的内容：方法。&lt;/p&gt;
&lt;p&gt;在 Objective-C 的论坛里，就算是方法命名这种琐碎的东西也有大量的讨论和争议。这门语言的特点之一便是命名冗长，比如 &lt;code&gt;performSelectorOnMainThread:withObject:waitUntilDone:&lt;/code&gt; 或是 &lt;code&gt;tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:&lt;/code&gt; 。对于这种命名习惯，有人喜欢，有人不喜欢，双方吵了很久，但是一直没有个结果。事实上，这个就是 Objective-C 的规范。规范是个好东西：在定下了通用的编码风格之后，协作成员可以更好地阅读彼此的代码，提高合作效率。&lt;/p&gt;
&lt;p&gt;但是，对于 Swift 这门全新的语言来说，编码规范尚未形成，现在还是百家争鸣的阶段。那么问题又来了：撇开命名习惯不谈，就针对 Swift 这门语言来说，它有很多新的特性，可以让我们更加清晰地定义方法，而不用像 Objective-C 那样冗长。&lt;/p&gt;
&lt;p&gt;接下来就让我们开始全新的旅程吧！&lt;/p&gt;
&lt;h2 id=&quot;冗长-≠-清晰&quot;&gt;&lt;a href=&quot;#冗长-≠-清晰&quot; class=&quot;headerlink&quot; title=&quot;冗长 ≠ 清晰&quot;&gt;&lt;/a&gt;冗长 ≠ 清晰&lt;/h2&gt;&lt;p&gt;对于冗长繁琐的 Objective-C 风格，一个常见的解释是这样可以让代码清晰易懂。他们说这样的代码可以自我解释，不用写文档大家就可以理解这个方法是用来干吗的。&lt;/p&gt;
&lt;p&gt;好吧在一定程度上来讲，这是完全正确的。不可否认，很多方法从命名就可以知道它是用来干吗的。但是我常常发现很多 Objective-C 的方法是啰嗦而又冗长的，并不够清晰。实际上，大部分代码让本来几个词就能解释的东西变得复杂化，很多的方法并不用那么复杂。&lt;/p&gt;
&lt;p&gt;举个例子：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[string componentsSeparatedByString:&lt;span class=&quot;string&quot;&gt;@&quot;\n&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这命名看得我也是醉了，足足27个字母，但是这真的 清 晰 吗？我知道你肯定知道这方法是干吗使的，但是假设，你不知道，对，假设你是一个小白，看到这么一堆代码，你猜猜它是干吗用的？唔它肯定是用来分离某个东西的，它需要一个字符串参数然后把它拆成了数组嗯。然后你可能根据它的上下文猜出了正确答案。但是 components 是个什么鬼？可能是指一些藏在内部的不起眼的东西？如果我第一次看到这个方法，我能猜个八九不离十，但是在看到文档之前我始终无法下定论。&lt;/p&gt;
&lt;p&gt;不妨和 Ruby 做个比较：&lt;br&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;string.split(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;它好短！很显然它的参数是一个字符串，然后好像做了什么分离。和上次一样，我们也只能猜个七七八八，瞄个大概95%的样子。和上面那个方法相比，这个方法我们也无法完全猜出其用意，但是单词量再多也是无济于事的。&lt;/p&gt;
&lt;h2 id=&quot;我们有办法&quot;&gt;&lt;a href=&quot;#我们有办法&quot; class=&quot;headerlink&quot; title=&quot;我们有办法&quot;&gt;&lt;/a&gt;我们有办法&lt;/h2&gt;&lt;p&gt;前面说了那么多，我希望你能理解，不管命名多么的复杂，它都无法准确的表达它的用处。如果命名清晰，那很好，确实有助于理解，但是命名终究只是一个标记而已，无法代替文档的作用。&lt;/p&gt;
&lt;p&gt;那么接下来我们假设这样一个场景，一名年轻的 Swift 程序媛正在认真学习，然后她在人生中第一次遇到 &lt;code&gt;map&lt;/code&gt; 、 &lt;code&gt;filter&lt;/code&gt; 和 &lt;code&gt;reduce&lt;/code&gt; 这三个家伙。光看名字她能理解这三个方法的用法吗？显然不能。当你理解它们的用处的时候再去看命名，当然是十分清晰，但是现在假设我们是第一次遇到这些方法，我们显然有点一头雾水。&lt;/p&gt;
&lt;p&gt;但是你可以这样做：按住 option 键，点击方法名：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/swifty-methods-xcode-yosemite.png&quot; alt=&quot;By http://LeoDev.me&quot;&gt;&lt;/p&gt;
&lt;p&gt;是的就是这么简单！猜什么猜，直接按住 option 点它就行！点完之后你就可以看到方法的解释和参数的含义了，等你理解了它的用处你就会发现， &lt;code&gt;map&lt;/code&gt; 的用处和 &lt;code&gt;arrayByEnumeratingObjectsUsingBlock&lt;/code&gt; 这一大串的功能是一样的。简单粗暴，直接有效。&lt;/p&gt;
&lt;h2 id=&quot;“噪音”&quot;&gt;&lt;a href=&quot;#“噪音”&quot; class=&quot;headerlink&quot; title=&quot;“噪音”&quot;&gt;&lt;/a&gt;“噪音”&lt;/h2&gt;&lt;p&gt;有人说，语意清晰比语句简洁更重要。没错，他们说的很对。但是简洁不代表不清晰。中国有个成语，言简意赅，就是说的这个。复杂冗长的命名同时也带来了很多负面影响。虽然现有的工具可以自动补全，这样写起来似乎也挺轻松的。但是在阅读的时候，啰嗦繁琐的命名总归是要消耗开发者大量的时间去阅读和理解，而言简意赅的命名读起来要轻松很多。&lt;/p&gt;
&lt;p&gt;我们再来看个简单例子，声明一个日期对象：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSDate&lt;/span&gt; *date = [&lt;span class=&quot;built_in&quot;&gt;NSDate&lt;/span&gt; date];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;为什么我们要说这么多遍的 date ？既然从上下文来看这个 date 很显然是个日期对象，为何还要啰嗦的再说一遍？“我用日期类定义一个日期对象并用日期类的日期初始化”，这可真是磨人。而且要分号干什么？&lt;/p&gt;
&lt;p&gt;和 Swift 比较一下：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; date = &lt;span class=&quot;type&quot;&gt;NSDate&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;显然这明显要简单得多。在这场对比里， Swift 赢了。双方的代码都很清晰的告诉我们它们要干什么，但是后者的“噪音”更少，只暴露出了最关键的内容。这样我们需要理解的代码少了很多，阅读起来也轻松不少。&lt;/p&gt;
&lt;p&gt;再来看下另一个例子：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;built_in&quot;&gt;NSTimer&lt;/span&gt; scheduledTimerWithTimeInterval:&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt; target:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; selector:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(foo:) userInfo:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; repeats:&lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;请盯着 &lt;code&gt;scheduledTimerWithTimeInterval&lt;/code&gt; 这个方法，凝视一分钟。为什么要再说一遍 &lt;code&gt;timer&lt;/code&gt; ？都已经说了，是 &lt;code&gt;NSTimer&lt;/code&gt; 的方法，我们还能 &lt;code&gt;schedule&lt;/code&gt; 别的东西不成？而且 &lt;code&gt;interval&lt;/code&gt; 已经足够清晰了，为什么还要多此一举的用 &lt;code&gt;time interval&lt;/code&gt; ？&lt;/p&gt;
&lt;p&gt;再看看 Swift ：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;NSTimer&lt;/span&gt;.schedule(interval: &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;, ...)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注意我把参数里的 &lt;code&gt;with&lt;/code&gt; 移除了，然后用了 &lt;code&gt;interval&lt;/code&gt; 作为参数标记。 Objective-C 总是想把方法名搞成个句子，但是现实是编程追求的是简洁和清晰，不可能像现实生活那样说话。 (如果你继续抱有这个想法，恭喜你，你和 AppleScript 想法一致，当然，没人喜欢 AppleScript )&lt;/p&gt;
&lt;p&gt;不妨引用一下 Swift 的设计者 &lt;a href=&quot;https://devforums.apple.com/message/1023082#1023082&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Chris Lattner&lt;/a&gt; 的一段话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可选链中的问号 (?) 的目的是让代码更清晰。很多人其实误解了 Swift ：它的目的，不是缩短语句减少单词量，而是为了移除多于的东西，保留最核心的内容，从而让代码尽量清晰明确。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这段话看你怎么理解了，但是我是这么解读的：我并不是为了简洁而简洁，我是通过移除“噪音”达到言简意赅的目的。&lt;/p&gt;
&lt;h2 id=&quot;此处有争议&quot;&gt;&lt;a href=&quot;#此处有争议&quot; class=&quot;headerlink&quot; title=&quot;此处有争议&quot;&gt;&lt;/a&gt;此处有争议&lt;/h2&gt;&lt;p&gt;编程语言各有各的特色，各有各的习惯，切忌把命名习惯应用到所有的语言里。有些方法是广为流传的，当然也有一些属于冷门招数，鲜为人知。&lt;/p&gt;
&lt;p&gt;想一想这些函数和方法的命名：&lt;code&gt;map&lt;/code&gt; 、 &lt;code&gt;reduce&lt;/code&gt; 、 &lt;code&gt;stride&lt;/code&gt; 、 &lt;code&gt;splice&lt;/code&gt; 。他们都是简短且易于使用的。可能第一眼看到不太能理解，但是这问题不大，因为它们都是标准类库的方法，你会用到很多很多次，抬头不见低头见，所以虽然第一次接触的时候需要一些学习的成本，但是从长远来看是利大于弊的。&lt;/p&gt;
&lt;p&gt;但是从另一个角度来说，你也会有很多你自己应用的代码，你显然不想把你代码里的方法定义成这种单个单词的名字。毕竟在你的整个代码库中，它们可能只会被调用一两次。它们是为了完成特定的任务而存在的，当你用到其他类的时候，你就完全忘了这些代码。&lt;/p&gt;
&lt;p&gt;我希望你能理解我说的内容。如果你在写一个类库或者框架的代码，或者是一些要被大范围使用的基类，那么可以用一些简洁的命名。如果你是在写应用里的普通代码，只会在一定范围里用到的而且使用频率并不频繁，那么你需要更加清晰更加 &lt;a href=&quot;https://signalvnoise.com/posts/3531-intention-revealing-methods&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;具有描述性&lt;/a&gt; 的代码。&lt;/p&gt;
&lt;h2 id=&quot;到底加不加标签&quot;&gt;&lt;a href=&quot;#到底加不加标签&quot; class=&quot;headerlink&quot; title=&quot;到底加不加标签&quot;&gt;&lt;/a&gt;到底加不加标签&lt;/h2&gt;&lt;p&gt;我觉得方法内的参数标签是个好东西 - 在函数调用的时候你可以直接理解参数的含义，而不是根据参数的位置去猜测。&lt;/p&gt;
&lt;p&gt;你可能会据理力争，“从上下文来推测的话，不用参数标签我就能看懂参数的意思啊，而且写起来的时候我们有自动补全也很方便”。或许是这样的，不过不像我前面说的那些内容，参数标签是 Swift 的语言风格，因为这门语言本身就希望你去用它们，并且如果不用的话需要做很多额外的工作。&lt;/p&gt;
&lt;p&gt;不过我认为有些场景确实不用标签更合理，比如下面这个：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;CGPoint&lt;/span&gt;(x: &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, y: &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;CGRect&lt;/span&gt;(x: &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, y: &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, width: &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, height: &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我觉得在这里，标签有点多余了，甚至有点影响视线。我们整天和坐标打交道，参数的顺序从来就没变过， x 总是在 y 前面， width 总是在 height 前面，如果不用标签的话其实也不错：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;CGPoint&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;CGRect&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;很显然我们都明白这些参数是什么意思，加上标签反而把事情搞复杂了。&lt;/p&gt;
&lt;p&gt;另一方面，有些情况下即使标签本身没有含义，但是加上之后会变得更加易于理解：&lt;/p&gt;
&lt;p&gt;以 stride 为例：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;stride&lt;/span&gt;(from: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, through: &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, by: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果没有这些标签，我们很难在没有文档的前提下搞清楚这些参数的含义。&lt;/p&gt;
&lt;h2 id=&quot;可选参数&quot;&gt;&lt;a href=&quot;#可选参数&quot; class=&quot;headerlink&quot; title=&quot;可选参数&quot;&gt;&lt;/a&gt;可选参数&lt;/h2&gt;&lt;p&gt;下面是在 Mac 下新建一个 window 对象的方法：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;built_in&quot;&gt;NSWindow&lt;/span&gt; alloc] initWithContentRect:frame styleMask:&lt;span class=&quot;built_in&quot;&gt;NSTitledWindowMask&lt;/span&gt; backing:&lt;span class=&quot;built_in&quot;&gt;NSBackingStoreBuffered&lt;/span&gt; defer:&lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt; screen:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;那么问题来了：在这一串方法中，唯一有意义的东西是内容的 frame 。其他的所有东西都改靠边站：他们太吵了！&lt;/p&gt;
&lt;p&gt;Swift 很好地解决了这个问题，你可以设置参数的默认值，所以你可以这样定义初始化方法：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;init&lt;/span&gt;(contentRect: &lt;span class=&quot;type&quot;&gt;NSRect&lt;/span&gt;, styleMask: &lt;span class=&quot;type&quot;&gt;NSWindowMask&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;NSWindowMask&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;Titled&lt;/span&gt;, backing: &lt;span class=&quot;type&quot;&gt;NSBackingStoreType&lt;/span&gt; = .&lt;span class=&quot;type&quot;&gt;Buffered&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt;: &lt;span class=&quot;type&quot;&gt;Bool&lt;/span&gt; = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, screen: &lt;span class=&quot;type&quot;&gt;NSScreen&lt;/span&gt;? = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;于是我们可以这样简短的初始化：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;NSWindow&lt;/span&gt;(contentRect: frame)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果你需要添加其他参数，和往常一样加在里面即可。&lt;/p&gt;
&lt;p&gt;Swift 中有个挺赞的特性，如果你有一串可选的参数，而你想设置第四个参数是没有默认值的，你不需要把前三个参数都写出来，有默认值的参数在 Swift 中是顺序无关的。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;啰嗦了这么多，你并不一定完全赞同我的观点，这也不是我的目的。我希望的是，你在写 Swift 的时候可以保持一个开放的心态，尽情探索这门有趣的语言，能够和新特性与新风格一起愉快的玩耍，享受编程的乐趣。如果你有时间，可以看看 Ruby 和 Haskell ，看看它们是怎么工作的。千万别听什么专家的话，因为这个领域根本就没有专家。当然，我也不是，括弧笑。&lt;/p&gt;
&lt;p&gt;尝试走一些非主流的路线。记住，没有什么习惯，没有什么官方编程风格。我亲爱的读者朋友，你就是那个定义规则的人，在这门语言里，你就是专家，你就是主人。走自己的路，让别人说去吧。&lt;/p&gt;
&lt;h2 id=&quot;关于-Swift-的资源&quot;&gt;&lt;a href=&quot;#关于-Swift-的资源&quot; class=&quot;headerlink&quot; title=&quot;关于 Swift 的资源&quot;&gt;&lt;/a&gt;关于 Swift 的资源&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://radex.io/swift/resources/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Great Swift resources&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;原文地址：&lt;a href=&quot;http://radex.io/swift/methods/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swifty methods&lt;/a&gt;&lt;br&gt;翻译：&lt;a href=&quot;http://blog.callmewhy.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Why’s Blog&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;联系与捐赠&quot;&gt;&lt;a href=&quot;#联系与捐赠&quot; class=&quot;headerlink&quot; title=&quot;联系与捐赠&quot;&gt;&lt;/a&gt;联系与捐赠&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Mail: devtip#163.com&lt;/li&gt;
&lt;li&gt;GitHub:    &lt;a href=&quot;https://github.com/LeoiOS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LeoiOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果你想对我的开发或是开源项目进行支持捐助，请扫描下方二维码，谢谢！👇&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/alipay.png&quot; alt=&quot;LEO&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;甩掉 Objective-C 的历史包袱，做一名纯粹的 Swift 程序员。&lt;/blockquote&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://note.leodev.me/categories/iOS/"/>
    
      <category term="Swift" scheme="http://note.leodev.me/categories/iOS/Swift/"/>
    
    
      <category term="iOS" scheme="http://note.leodev.me/tags/iOS/"/>
    
      <category term="Swift" scheme="http://note.leodev.me/tags/Swift/"/>
    
  </entry>
  
  <entry>
    <title>【iOS】Apple Pay 开发指南（一）</title>
    <link href="http://note.leodev.me/2016/03/04/iOS-Apple-Pay-Developer-Guide-1/"/>
    <id>http://note.leodev.me/2016/03/04/iOS-Apple-Pay-Developer-Guide-1/</id>
    <published>2016-03-04T04:47:27.000Z</published>
    <updated>2016-03-04T07:40:29.000Z</updated>
    
    <content type="html">&lt;!--&lt;img src=&quot;&quot; class=&quot;full-image&quot; /&gt;--&gt;
&lt;p&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/Apple_Pay_Payment_Mark.jpg&quot; alt=&quot;By http://LeoDev.me&quot;&gt;&lt;/p&gt;
&lt;p&gt;在发布近两年、历经各种周折之后，苹果公司的 Apple Pay 移动支付服务终于在2016年2月18日来到了中国大陆。&lt;br&gt;对中国用户来说，移动支付其实已经不是什么陌生事物，抢红包和支付宝早完成用户启蒙。但与这两者有区别的是，Apple Pay 只是苹果搭建的一个支付服务，它链接银行、店面及用户，但又不像支付宝那样把钱存在自己这，这是银联为何会疯狗一样帮推的原因之一。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;作为开发者，这事还是值得高兴会的，高大上啊，不过代价是又要学习新知识了。。。&lt;br&gt;不过还好，看了看 Apple Pay 的文档，发现事情并没有那么可悲，这玩意还是比较容易搞的。&lt;br&gt;Swift 来一发好了。&lt;/p&gt;
&lt;h2 id=&quot;开发步骤&quot;&gt;&lt;a href=&quot;#开发步骤&quot; class=&quot;headerlink&quot; title=&quot;开发步骤&quot;&gt;&lt;/a&gt;开发步骤&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;新建项目，打开 Apple Pay 的开关：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/ApplePay01.png&quot; alt=&quot;By http://LeoDev.me&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;这时你会发现 Merchant IDs 下面什么都没有，正常，点 + 号，按提示创建一个 Merchant ID：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/ApplePay02.png&quot; alt=&quot;By http://LeoDev.me&quot;&gt;&lt;/p&gt;
&lt;p&gt;当然你也可以前往 &lt;a href=&quot;https://developer.apple.com/membercenter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;开发者中心&lt;/a&gt; 创建：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/ApplePay03.png&quot; alt=&quot;By http://LeoDev.me&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建好了就是这个样子的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/ApplePay04.png&quot; alt=&quot;By http://LeoDev.me&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;打开 ViewController.swift，开心地敲代码吧~&lt;br&gt;完整代码如下，注释比较齐全：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  ViewController.swift&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  ApplePayDemo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  Created by Leo on 16/3/4.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  Copyright © 2016年 Leo. All rights reserved.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; UIKit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; PassKit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ViewController&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;UIViewController&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;PKPaymentAuthorizationViewControllerDelegate&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;viewDidLoad&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.viewDidLoad()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; iconImage = &lt;span class=&quot;type&quot;&gt;UIImage&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;init&lt;/span&gt;(named: &lt;span class=&quot;string&quot;&gt;&quot;Apple_Pay_Payment_Mark&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; payBtn = &lt;span class=&quot;type&quot;&gt;UIButton&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;init&lt;/span&gt;(frame: &lt;span class=&quot;type&quot;&gt;CGRectMake&lt;/span&gt;((&lt;span class=&quot;type&quot;&gt;UIScreen&lt;/span&gt;.mainScreen().bounds.size.width - &lt;span class=&quot;number&quot;&gt;100.0&lt;/span&gt;) * &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;64.0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        payBtn.setBackgroundImage(iconImage, forState: &lt;span class=&quot;type&quot;&gt;UIControlState&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;Normal&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        payBtn.addTarget(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;, action: &lt;span class=&quot;string&quot;&gt;&quot;payBtnClicked&quot;&lt;/span&gt;, forControlEvents: &lt;span class=&quot;type&quot;&gt;UIControlEvents&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;TouchUpInside&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        view.addSubview(payBtn)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     点击了支付按钮&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;payBtnClicked&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 检查用户是否支持 Apple Pay&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; !&lt;span class=&quot;type&quot;&gt;PKPaymentAuthorizationViewController&lt;/span&gt;.canMakePayments() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;设备不支持 Apple Pay&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; alertView = &lt;span class=&quot;type&quot;&gt;UIAlertView&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;init&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                title: &lt;span class=&quot;string&quot;&gt;&quot;设备不支持 Apple Pay&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                message: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                delegate: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                cancelButtonTitle: &lt;span class=&quot;string&quot;&gt;&quot;确定&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            alertView.show()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 检查是否支持用户卡片&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; paymentNetworks: [&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;]!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; #available(iOS &lt;span class=&quot;number&quot;&gt;9.2&lt;/span&gt;, *) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            paymentNetworks = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;type&quot;&gt;PKPaymentNetworkVisa&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;type&quot;&gt;PKPaymentNetworkMasterCard&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;type&quot;&gt;PKPaymentNetworkChinaUnionPay&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;// 银联卡要求 iOS 9.2 +&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            paymentNetworks = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;type&quot;&gt;PKPaymentNetworkVisa&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;type&quot;&gt;PKPaymentNetworkMasterCard&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; !&lt;span class=&quot;type&quot;&gt;PKPaymentAuthorizationViewController&lt;/span&gt;.canMakePaymentsUsingNetworks(paymentNetworks) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;不支持的卡片类型。目前仅支持 Visa、MasterCard、中国银联卡。&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; alertView = &lt;span class=&quot;type&quot;&gt;UIAlertView&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;init&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                title: &lt;span class=&quot;string&quot;&gt;&quot;不支持的卡片类型&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                message: &lt;span class=&quot;string&quot;&gt;&quot;目前仅支持 Visa、MasterCard、中国银联卡。&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                delegate: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                cancelButtonTitle: &lt;span class=&quot;string&quot;&gt;&quot;确定&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            alertView.show()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 创建付款请求&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; request                  = &lt;span class=&quot;type&quot;&gt;PKPaymentRequest&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request.countryCode          = &lt;span class=&quot;string&quot;&gt;&quot;CN&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request.currencyCode         = &lt;span class=&quot;string&quot;&gt;&quot;CNY&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request.supportedNetworks    = paymentNetworks&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request.merchantIdentifier   = &lt;span class=&quot;string&quot;&gt;&quot;merchant.me.leodev.ApplePayDemo&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request.merchantCapabilities = &lt;span class=&quot;type&quot;&gt;PKMerchantCapability&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;Capability3DS&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 添加付款项目&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; item1 = &lt;span class=&quot;type&quot;&gt;PKPaymentSummaryItem&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;init&lt;/span&gt;(label: &lt;span class=&quot;string&quot;&gt;&quot;美酒&quot;&lt;/span&gt;, amount: &lt;span class=&quot;type&quot;&gt;NSDecimalNumber&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;init&lt;/span&gt;(double: &lt;span class=&quot;number&quot;&gt;99.99&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; item2 = &lt;span class=&quot;type&quot;&gt;PKPaymentSummaryItem&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;init&lt;/span&gt;(label: &lt;span class=&quot;string&quot;&gt;&quot;咖啡&quot;&lt;/span&gt;, amount: &lt;span class=&quot;type&quot;&gt;NSDecimalNumber&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;init&lt;/span&gt;(double: &lt;span class=&quot;number&quot;&gt;29.99&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; item3 = &lt;span class=&quot;type&quot;&gt;PKPaymentSummaryItem&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;init&lt;/span&gt;(label: &lt;span class=&quot;string&quot;&gt;&quot;小费&quot;&lt;/span&gt;, amount: &lt;span class=&quot;type&quot;&gt;NSDecimalNumber&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;init&lt;/span&gt;(double: &lt;span class=&quot;number&quot;&gt;19.99&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; item4 = &lt;span class=&quot;type&quot;&gt;PKPaymentSummaryItem&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;init&lt;/span&gt;(label: &lt;span class=&quot;string&quot;&gt;&quot;超哥&quot;&lt;/span&gt;, amount: &lt;span class=&quot;type&quot;&gt;NSDecimalNumber&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;init&lt;/span&gt;(double: &lt;span class=&quot;number&quot;&gt;149.97&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request.paymentSummaryItems = [item1, item2, item3, item4]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 初始化 PKPaymentAuthorizationViewController 并显示&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; authViewController = &lt;span class=&quot;type&quot;&gt;PKPaymentAuthorizationViewController&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;init&lt;/span&gt;(paymentRequest: request)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        authViewController.delegate = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        presentViewController(authViewController, animated: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;, completion: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// MARK: - PKPaymentAuthorizationViewControllerDelegate&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    处理交易数据，并把状态返回给应用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - parameter controller: 当前的 PKPaymentAuthorizationViewController&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - parameter payment:    payment&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - parameter completion: 返回&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;paymentAuthorizationViewController&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(controller: PKPaymentAuthorizationViewController, didAuthorizePayment payment: PKPayment, completion: &lt;span class=&quot;params&quot;&gt;(PKPaymentAuthorizationStatus)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Void&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; paymentToken = payment.token&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;\(paymentToken)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 超哥交易成功了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        completion(.&lt;span class=&quot;type&quot;&gt;Success&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 交易成功应该 push 个交易成功的界面什么的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     支付完成，隐藏 PKPaymentAuthorizationViewController&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     - parameter controller: 当前的 PKPaymentAuthorizationViewController&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;paymentAuthorizationViewControllerDidFinish&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(controller: PKPaymentAuthorizationViewController)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.dismissViewControllerAnimated(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;, completion: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;收工。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;想想支付宝和微信支付， Pay 真 TM 简单啊。。。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;源码&lt;/strong&gt;：&lt;a href=&quot;https://github.com/LeoiOS/ApplePayDemo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;示例&quot;&gt;&lt;a href=&quot;#示例&quot; class=&quot;headerlink&quot; title=&quot;示例&quot;&gt;&lt;/a&gt;示例&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/ApplePay05.png&quot; alt=&quot;By http://LeoDev.me&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/ApplePay06.png&quot; alt=&quot;By http://LeoDev.me&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/ApplePay07.png&quot; alt=&quot;By http://LeoDev.me&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;附一-currencyCode&quot;&gt;&lt;a href=&quot;#附一-currencyCode&quot; class=&quot;headerlink&quot; title=&quot;附一 currencyCode&quot;&gt;&lt;/a&gt;附一 currencyCode&lt;/h2&gt;&lt;p&gt;ADP,&lt;br&gt;AED,&lt;br&gt;AFA,&lt;br&gt;AFN,&lt;br&gt;ALK,&lt;br&gt;ALL,&lt;br&gt;AMD,&lt;br&gt;ANG,&lt;br&gt;AOA,&lt;br&gt;AOK,&lt;br&gt;AON,&lt;br&gt;AOR,&lt;br&gt;ARA,&lt;br&gt;ARL,&lt;br&gt;ARM,&lt;br&gt;ARP,&lt;br&gt;ARS,&lt;br&gt;ATS,&lt;br&gt;AUD,&lt;br&gt;AWG,&lt;br&gt;AZM,&lt;br&gt;AZN,&lt;br&gt;BAD,&lt;br&gt;BAM,&lt;br&gt;BAN,&lt;br&gt;BBD,&lt;br&gt;BDT,&lt;br&gt;BEC,&lt;br&gt;BEF,&lt;br&gt;BEL,&lt;br&gt;BGL,&lt;br&gt;BGM,&lt;br&gt;BGN,&lt;br&gt;BGO,&lt;br&gt;BHD,&lt;br&gt;BIF,&lt;br&gt;BMD,&lt;br&gt;BND,&lt;br&gt;BOB,&lt;br&gt;BOL,&lt;br&gt;BOP,&lt;br&gt;BOV,&lt;br&gt;BRB,&lt;br&gt;BRC,&lt;br&gt;BRE,&lt;br&gt;BRL,&lt;br&gt;BRN,&lt;br&gt;BRR,&lt;br&gt;BRZ,&lt;br&gt;BSD,&lt;br&gt;BTN,&lt;br&gt;BUK,&lt;br&gt;BWP,&lt;br&gt;BYB,&lt;br&gt;BYR,&lt;br&gt;BZD,&lt;br&gt;CAD,&lt;br&gt;CDF,&lt;br&gt;CHE,&lt;br&gt;CHF,&lt;br&gt;CHW,&lt;br&gt;CLE,&lt;br&gt;CLF,&lt;br&gt;CLP,&lt;br&gt;CNX,&lt;br&gt;CNY,&lt;br&gt;COP,&lt;br&gt;COU,&lt;br&gt;CRC,&lt;br&gt;CSD,&lt;br&gt;CSK,&lt;br&gt;CUC,&lt;br&gt;CUP,&lt;br&gt;CVE,&lt;br&gt;CYP,&lt;br&gt;CZK,&lt;br&gt;DDM,&lt;br&gt;DEM,&lt;br&gt;DJF,&lt;br&gt;DKK,&lt;br&gt;DOP,&lt;br&gt;DZD,&lt;br&gt;ECS,&lt;br&gt;ECV,&lt;br&gt;EEK,&lt;br&gt;EGP,&lt;br&gt;EQE,&lt;br&gt;ERN,&lt;br&gt;ESA,&lt;br&gt;ESB,&lt;br&gt;ESP,&lt;br&gt;ETB,&lt;br&gt;EUR,&lt;br&gt;FIM,&lt;br&gt;FJD,&lt;br&gt;FKP,&lt;br&gt;FRF,&lt;br&gt;GBP,&lt;br&gt;GEK,&lt;br&gt;GEL,&lt;br&gt;GHC,&lt;br&gt;GHS,&lt;br&gt;GIP,&lt;br&gt;GMD,&lt;br&gt;GNF,&lt;br&gt;GNS,&lt;br&gt;GQE,&lt;br&gt;GRD,&lt;br&gt;GTQ,&lt;br&gt;GWE,&lt;br&gt;GWP,&lt;br&gt;GYD,&lt;br&gt;HKD,&lt;br&gt;HNL,&lt;br&gt;HRD,&lt;br&gt;HRK,&lt;br&gt;HTG,&lt;br&gt;HUF,&lt;br&gt;IDR,&lt;br&gt;IEP,&lt;br&gt;ILP,&lt;br&gt;ILR,&lt;br&gt;ILS,&lt;br&gt;INR,&lt;br&gt;IQD,&lt;br&gt;IRR,&lt;br&gt;ISJ,&lt;br&gt;ISK,&lt;br&gt;ITL,&lt;br&gt;JMD,&lt;br&gt;JOD,&lt;br&gt;JPY,&lt;br&gt;KES,&lt;br&gt;KGS,&lt;br&gt;KHR,&lt;br&gt;KMF,&lt;br&gt;KPW,&lt;br&gt;KRH,&lt;br&gt;KRO,&lt;br&gt;KRW,&lt;br&gt;KWD,&lt;br&gt;KYD,&lt;br&gt;KZT,&lt;br&gt;LAK,&lt;br&gt;LBP,&lt;br&gt;LKR,&lt;br&gt;LRD,&lt;br&gt;LSL,&lt;br&gt;LSM,&lt;br&gt;LTL,&lt;br&gt;LTT,&lt;br&gt;LUC,&lt;br&gt;LUF,&lt;br&gt;LUL,&lt;br&gt;LVL,&lt;br&gt;LVR,&lt;br&gt;LYD,&lt;br&gt;MAD,&lt;br&gt;MAF,&lt;br&gt;MCF,&lt;br&gt;MDC,&lt;br&gt;MDL,&lt;br&gt;MGA,&lt;br&gt;MGF,&lt;br&gt;MKD,&lt;br&gt;MKN,&lt;br&gt;MLF,&lt;br&gt;MMK,&lt;br&gt;MNT,&lt;br&gt;MOP,&lt;br&gt;MRO,&lt;br&gt;MTL,&lt;br&gt;MTP,&lt;br&gt;MUR,&lt;br&gt;MVP,&lt;br&gt;MVR,&lt;br&gt;MWK,&lt;br&gt;MXN,&lt;br&gt;MXP,&lt;br&gt;MXV,&lt;br&gt;MYR,&lt;br&gt;MZE,&lt;br&gt;MZM,&lt;br&gt;MZN,&lt;br&gt;NAD,&lt;br&gt;NGN,&lt;br&gt;NIC,&lt;br&gt;NIO,&lt;br&gt;NLG,&lt;br&gt;NOK,&lt;br&gt;NPR,&lt;br&gt;NZD,&lt;br&gt;OMR,&lt;br&gt;PAB,&lt;br&gt;PEI,&lt;br&gt;PEN,&lt;br&gt;PES,&lt;br&gt;PGK,&lt;br&gt;PHP,&lt;br&gt;PKR,&lt;br&gt;PLN,&lt;br&gt;PLZ,&lt;br&gt;PTE,&lt;br&gt;PYG,&lt;br&gt;QAR,&lt;br&gt;RHD,&lt;br&gt;ROL,&lt;br&gt;RON,&lt;br&gt;RSD,&lt;br&gt;RUB,&lt;br&gt;RUR,&lt;br&gt;RWF,&lt;br&gt;SAR,&lt;br&gt;SBD,&lt;br&gt;SCR,&lt;br&gt;SDD,&lt;br&gt;SDG,&lt;br&gt;SDP,&lt;br&gt;SEK,&lt;br&gt;SGD,&lt;br&gt;SHP,&lt;br&gt;SIT,&lt;br&gt;SKK,&lt;br&gt;SLL,&lt;br&gt;SOS,&lt;br&gt;SRD,&lt;br&gt;SRG,&lt;br&gt;SSP,&lt;br&gt;STD,&lt;br&gt;SUR,&lt;br&gt;SVC,&lt;br&gt;SYP,&lt;br&gt;SZL,&lt;br&gt;THB,&lt;br&gt;TJR,&lt;br&gt;TJS,&lt;br&gt;TMM,&lt;br&gt;TMT,&lt;br&gt;TND,&lt;br&gt;TOP,&lt;br&gt;TPE,&lt;br&gt;TRL,&lt;br&gt;TRY,&lt;br&gt;TTD,&lt;br&gt;TWD,&lt;br&gt;TZS,&lt;br&gt;UAH,&lt;br&gt;UAK,&lt;br&gt;UGS,&lt;br&gt;UGX,&lt;br&gt;USD,&lt;br&gt;USN,&lt;br&gt;USS,&lt;br&gt;UYI,&lt;br&gt;UYP,&lt;br&gt;UYU,&lt;br&gt;UZS,&lt;br&gt;VEB,&lt;br&gt;VEF,&lt;br&gt;VND,&lt;br&gt;VNN,&lt;br&gt;VUV,&lt;br&gt;WST,&lt;br&gt;XAF,&lt;br&gt;XAG,&lt;br&gt;XAU,&lt;br&gt;XBA,&lt;br&gt;XBB,&lt;br&gt;XBC,&lt;br&gt;XBD,&lt;br&gt;XCD,&lt;br&gt;XDR,&lt;br&gt;XEU,&lt;br&gt;XFO,&lt;br&gt;XFU,&lt;br&gt;XOF,&lt;br&gt;XPD,&lt;br&gt;XPF,&lt;br&gt;XPT,&lt;br&gt;XRE,&lt;br&gt;XSU,&lt;br&gt;XTS,&lt;br&gt;XUA,&lt;br&gt;XXX,&lt;br&gt;YDD,&lt;br&gt;YER,&lt;br&gt;YUD,&lt;br&gt;YUM,&lt;br&gt;YUN,&lt;br&gt;YUR,&lt;br&gt;ZAL,&lt;br&gt;ZAR,&lt;br&gt;ZMK,&lt;br&gt;ZMW,&lt;br&gt;ZRN,&lt;br&gt;ZRZ,&lt;br&gt;ZWL,&lt;br&gt;ZWR,&lt;br&gt;ZWD&lt;/p&gt;
&lt;h2 id=&quot;附二-countryCode&quot;&gt;&lt;a href=&quot;#附二-countryCode&quot; class=&quot;headerlink&quot; title=&quot;附二 countryCode&quot;&gt;&lt;/a&gt;附二 countryCode&lt;/h2&gt;&lt;p&gt;AD,&lt;br&gt;AE,&lt;br&gt;AF,&lt;br&gt;AG,&lt;br&gt;AI,&lt;br&gt;AL,&lt;br&gt;AM,&lt;br&gt;AO,&lt;br&gt;AQ,&lt;br&gt;AR,&lt;br&gt;AS,&lt;br&gt;AT,&lt;br&gt;AU,&lt;br&gt;AW,&lt;br&gt;AX,&lt;br&gt;AZ,&lt;br&gt;BA,&lt;br&gt;BB,&lt;br&gt;BD,&lt;br&gt;BE,&lt;br&gt;BF,&lt;br&gt;BG,&lt;br&gt;BH,&lt;br&gt;BI,&lt;br&gt;BJ,&lt;br&gt;BL,&lt;br&gt;BM,&lt;br&gt;BN,&lt;br&gt;BO,&lt;br&gt;BQ,&lt;br&gt;BR,&lt;br&gt;BS,&lt;br&gt;BT,&lt;br&gt;BV,&lt;br&gt;BW,&lt;br&gt;BY,&lt;br&gt;BZ,&lt;br&gt;CA,&lt;br&gt;CC,&lt;br&gt;CD,&lt;br&gt;CF,&lt;br&gt;CG,&lt;br&gt;CH,&lt;br&gt;CI,&lt;br&gt;CK,&lt;br&gt;CL,&lt;br&gt;CM,&lt;br&gt;CN,&lt;br&gt;CO,&lt;br&gt;CR,&lt;br&gt;CU,&lt;br&gt;CV,&lt;br&gt;CW,&lt;br&gt;CX,&lt;br&gt;CY,&lt;br&gt;CZ,&lt;br&gt;DE,&lt;br&gt;DJ,&lt;br&gt;DK,&lt;br&gt;DM,&lt;br&gt;DO,&lt;br&gt;DZ,&lt;br&gt;EC,&lt;br&gt;EE,&lt;br&gt;EG,&lt;br&gt;EH,&lt;br&gt;ER,&lt;br&gt;ES,&lt;br&gt;ET,&lt;br&gt;FI,&lt;br&gt;FJ,&lt;br&gt;FK,&lt;br&gt;FM,&lt;br&gt;FO,&lt;br&gt;FR,&lt;br&gt;GA,&lt;br&gt;GB,&lt;br&gt;GD,&lt;br&gt;GE,&lt;br&gt;GF,&lt;br&gt;GG,&lt;br&gt;GH,&lt;br&gt;GI,&lt;br&gt;GL,&lt;br&gt;GM,&lt;br&gt;GN,&lt;br&gt;GP,&lt;br&gt;GQ,&lt;br&gt;GR,&lt;br&gt;GS,&lt;br&gt;GT,&lt;br&gt;GU,&lt;br&gt;GW,&lt;br&gt;GY,&lt;br&gt;HK,&lt;br&gt;HM,&lt;br&gt;HN,&lt;br&gt;HR,&lt;br&gt;HT,&lt;br&gt;HU,&lt;br&gt;ID,&lt;br&gt;IE,&lt;br&gt;IL,&lt;br&gt;IM,&lt;br&gt;IN,&lt;br&gt;IO,&lt;br&gt;IQ,&lt;br&gt;IR,&lt;br&gt;IS,&lt;br&gt;IT,&lt;br&gt;JE,&lt;br&gt;JM,&lt;br&gt;JO,&lt;br&gt;JP,&lt;br&gt;KE,&lt;br&gt;KG,&lt;br&gt;KH,&lt;br&gt;KI,&lt;br&gt;KM,&lt;br&gt;KN,&lt;br&gt;KP,&lt;br&gt;KR,&lt;br&gt;KW,&lt;br&gt;KY,&lt;br&gt;KZ,&lt;br&gt;LA,&lt;br&gt;LB,&lt;br&gt;LC,&lt;br&gt;LI,&lt;br&gt;LK,&lt;br&gt;LR,&lt;br&gt;LS,&lt;br&gt;LT,&lt;br&gt;LU,&lt;br&gt;LV,&lt;br&gt;LY,&lt;br&gt;MA,&lt;br&gt;MC,&lt;br&gt;MD,&lt;br&gt;ME,&lt;br&gt;MF,&lt;br&gt;MG,&lt;br&gt;MH,&lt;br&gt;MK,&lt;br&gt;ML,&lt;br&gt;MM,&lt;br&gt;MN,&lt;br&gt;MO,&lt;br&gt;MP,&lt;br&gt;MQ,&lt;br&gt;MR,&lt;br&gt;MS,&lt;br&gt;MT,&lt;br&gt;MU,&lt;br&gt;MV,&lt;br&gt;MW,&lt;br&gt;MX,&lt;br&gt;MY,&lt;br&gt;MZ,&lt;br&gt;NA,&lt;br&gt;NC,&lt;br&gt;NE,&lt;br&gt;NF,&lt;br&gt;NG,&lt;br&gt;NI,&lt;br&gt;NL,&lt;br&gt;NO,&lt;br&gt;NP,&lt;br&gt;NR,&lt;br&gt;NU,&lt;br&gt;NZ,&lt;br&gt;OM,&lt;br&gt;PA,&lt;br&gt;PE,&lt;br&gt;PF,&lt;br&gt;PG,&lt;br&gt;PH,&lt;br&gt;PK,&lt;br&gt;PL,&lt;br&gt;PM,&lt;br&gt;PN,&lt;br&gt;PR,&lt;br&gt;PS,&lt;br&gt;PT,&lt;br&gt;PW,&lt;br&gt;PY,&lt;br&gt;QA,&lt;br&gt;RE,&lt;br&gt;RO,&lt;br&gt;RS,&lt;br&gt;RU,&lt;br&gt;RW,&lt;br&gt;SA,&lt;br&gt;SB,&lt;br&gt;SC,&lt;br&gt;SD,&lt;br&gt;SE,&lt;br&gt;SG,&lt;br&gt;SH,&lt;br&gt;SI,&lt;br&gt;SJ,&lt;br&gt;SK,&lt;br&gt;SL,&lt;br&gt;SM,&lt;br&gt;SN,&lt;br&gt;SO,&lt;br&gt;SR,&lt;br&gt;SS,&lt;br&gt;ST,&lt;br&gt;SV,&lt;br&gt;SX,&lt;br&gt;SY,&lt;br&gt;SZ,&lt;br&gt;TC,&lt;br&gt;TD,&lt;br&gt;TF,&lt;br&gt;TG,&lt;br&gt;TH,&lt;br&gt;TJ,&lt;br&gt;TK,&lt;br&gt;TL,&lt;br&gt;TM,&lt;br&gt;TN,&lt;br&gt;TO,&lt;br&gt;TR,&lt;br&gt;TT,&lt;br&gt;TV,&lt;br&gt;TW,&lt;br&gt;TZ,&lt;br&gt;UA,&lt;br&gt;UG,&lt;br&gt;UM,&lt;br&gt;US,&lt;br&gt;UY,&lt;br&gt;UZ,&lt;br&gt;VA,&lt;br&gt;VC,&lt;br&gt;VE,&lt;br&gt;VG,&lt;br&gt;VI,&lt;br&gt;VN,&lt;br&gt;VU,&lt;br&gt;WF,&lt;br&gt;WS,&lt;br&gt;YE,&lt;br&gt;YT,&lt;br&gt;ZA,&lt;br&gt;ZM,&lt;br&gt;ZW&lt;/p&gt;
&lt;h2 id=&quot;联系与捐赠&quot;&gt;&lt;a href=&quot;#联系与捐赠&quot; class=&quot;headerlink&quot; title=&quot;联系与捐赠&quot;&gt;&lt;/a&gt;联系与捐赠&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Mail: devtip#163.com&lt;/li&gt;
&lt;li&gt;GitHub:    &lt;a href=&quot;https://github.com/LeoiOS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LeoiOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果你想对我的开发或是开源项目进行支持捐助，请扫描下方二维码，谢谢！👇&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/alipay.png&quot; alt=&quot;LEO&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;!--&lt;img src=&quot;&quot; class=&quot;full-image&quot; /&gt;--&gt;
&lt;p&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/Apple_Pay_Payment_Mark.jpg&quot; alt=&quot;By http://LeoDev.me&quot;&gt;&lt;/p&gt;
&lt;p&gt;在发布近两年、历经各种周折之后，苹果公司的 Apple Pay 移动支付服务终于在2016年2月18日来到了中国大陆。&lt;br&gt;对中国用户来说，移动支付其实已经不是什么陌生事物，抢红包和支付宝早完成用户启蒙。但与这两者有区别的是，Apple Pay 只是苹果搭建的一个支付服务，它链接银行、店面及用户，但又不像支付宝那样把钱存在自己这，这是银联为何会疯狗一样帮推的原因之一。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://note.leodev.me/categories/iOS/"/>
    
      <category term="Apple Pay" scheme="http://note.leodev.me/categories/iOS/Apple-Pay/"/>
    
      <category term="Swift" scheme="http://note.leodev.me/categories/iOS/Apple-Pay/Swift/"/>
    
    
      <category term="iOS" scheme="http://note.leodev.me/tags/iOS/"/>
    
      <category term="Apple Pay" scheme="http://note.leodev.me/tags/Apple-Pay/"/>
    
      <category term="Swift" scheme="http://note.leodev.me/tags/Swift/"/>
    
  </entry>
  
  <entry>
    <title>【Mac】终端常见的 Vim 命令</title>
    <link href="http://note.leodev.me/2016/02/22/Mac-Terminal-Commonly-Used-Vim-Commands/"/>
    <id>http://note.leodev.me/2016/02/22/Mac-Terminal-Commonly-Used-Vim-Commands/</id>
    <published>2016-02-22T02:28:52.000Z</published>
    <updated>2016-03-04T06:58:43.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/macbook03.png&quot; class=&quot;full-image&quot;&gt;&lt;/p&gt;
&lt;p&gt;Mac 是一款开发利器，对开发者是相当友好的。&lt;br&gt;比如系统自带终端（Terminal）对 vim 命令的支持，就大幅提升了日常开发的便捷度。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;一、常见命令&quot;&gt;&lt;a href=&quot;#一、常见命令&quot; class=&quot;headerlink&quot; title=&quot;一、常见命令&quot;&gt;&lt;/a&gt;一、常见命令&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;pwd&lt;/code&gt;&lt;br&gt;显示当前目录&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;LeoMacBookPro:&lt;/span&gt;~ Leo$ pwd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/Users/Leo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;显示文件列表命令：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ls&lt;/code&gt;&lt;br&gt;显示当前目录下的所有文件&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;LeoMacBookPro:&lt;/span&gt;~ Leo$ ls&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Applications	Downloads	Music		gitosis-admin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Desktop		Library		Pictures	node_modules&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Documents	Movies		Public&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ls -al&lt;/code&gt;&lt;br&gt;详细显示当前目录下的所有文件&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;LeoMacBookPro:&lt;/span&gt;~ Leo$ ls -al&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;total &lt;span class=&quot;number&quot;&gt;144&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drwx------+   &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt; Leo   staff    &lt;span class=&quot;number&quot;&gt;238&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; Pictures&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drwxr-xr-x+   &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt; Leo   staff    &lt;span class=&quot;number&quot;&gt;204&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;58&lt;/span&gt; Public&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drwxr-xr-x    &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; Leo   staff    &lt;span class=&quot;number&quot;&gt;170&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;02&lt;/span&gt; gitosis-admin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drwxr-xr-x    &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; Leo   staff     &lt;span class=&quot;number&quot;&gt;68&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;04&lt;/span&gt; node_modules&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ls -G&lt;/code&gt;&lt;br&gt;黑/白色的表示普通文件&lt;br&gt;蓝色的表示文件夹或者目录&lt;br&gt;红色表示可执行程序&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;LeoMacBookPro:&lt;/span&gt;~ Leo$ ls -G&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Applications  Downloads     Music         gitosis-admin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Desktop       Library       Pictures      node_modules&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Documents     Movies        Public&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;不截图了哈，在终端中是有颜色的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;你可以结合多个参数使用 ls 命令，如 &lt;code&gt;ls -G -al&lt;/code&gt; 会详细显示所有文件并颜色处理。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;cd&lt;/code&gt;&lt;br&gt;进入或者退出某个目录(文件夹)&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;LeoMacBookPro:&lt;/span&gt;~ Leo$ cd Library/  &lt;span class=&quot;comment&quot;&gt;# 进入 Library 目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;LeoMacBookPro:&lt;/span&gt;Library Leo$&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;LeoMacBookPro:&lt;/span&gt;Library Leo$ cd ..  &lt;span class=&quot;comment&quot;&gt;# 退出 Library 目录 / 返回父目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;LeoMacBookPro:&lt;/span&gt;~ Leo$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;mkdir&lt;/code&gt;&lt;br&gt;创建文件夹&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir MyProject&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;touch&lt;/code&gt;&lt;br&gt;创建新文件&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;touch &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;cp&lt;/code&gt;&lt;br&gt;拷贝&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 把 1.txt 拷贝到 MyProject 目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cp &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt  MyProject           &lt;span class=&quot;comment&quot;&gt;# 相对路径，拷贝到当前目录下的 MyProject 目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cp &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt /Users/Leo/MyProject &lt;span class=&quot;comment&quot;&gt;# 绝对路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;rm&lt;/code&gt;&lt;br&gt;删除命令&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rm &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt          &lt;span class=&quot;comment&quot;&gt;# 删除文件 1.txt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rm -rf MyProject  &lt;span class=&quot;comment&quot;&gt;# 删除目录 MyProject&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;mv&lt;/code&gt;&lt;br&gt;改名和移动&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mv &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.txt      &lt;span class=&quot;comment&quot;&gt;# 改名，把 1.txt 重命名为 2.txt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mv &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt MyProject  &lt;span class=&quot;comment&quot;&gt;# 移动，把 1.txt 移动到当前目录下的 MyProject 目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;网络命令：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ifconfig&lt;/code&gt;&lt;br&gt;查看当前网络配置，Windows 系统下是 &lt;code&gt;ipconfig&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;LeoMacBookPro:&lt;/span&gt;~ Leo$ ifconfig&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;lo0:&lt;/span&gt; flags=&lt;span class=&quot;number&quot;&gt;8049&lt;/span&gt;&amp;lt;UP,LOOPBACK,RUNNING,MULTICAST&amp;gt; mtu &lt;span class=&quot;number&quot;&gt;16384&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	options=&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&amp;lt;RXCSUM,TXCSUM&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	inet6 &lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; prefixlen &lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	inet &lt;span class=&quot;number&quot;&gt;127.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; netmask &lt;span class=&quot;number&quot;&gt;0xff000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	inet6 &lt;span class=&quot;symbol&quot;&gt;fe80:&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;%lo&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; prefixlen &lt;span class=&quot;number&quot;&gt;64&lt;/span&gt; scopeid &lt;span class=&quot;number&quot;&gt;0x1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	nd6 options=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;lt;PERFORMNUD&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;gif0:&lt;/span&gt; flags=&lt;span class=&quot;number&quot;&gt;8010&lt;/span&gt;&amp;lt;POINTOPOINT,MULTICAST&amp;gt; mtu &lt;span class=&quot;number&quot;&gt;1280&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;stf0:&lt;/span&gt; flags=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;lt;&amp;gt; mtu &lt;span class=&quot;number&quot;&gt;1280&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;en4:&lt;/span&gt; flags=&lt;span class=&quot;number&quot;&gt;8863&lt;/span&gt;&amp;lt;UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST&amp;gt; mtu &lt;span class=&quot;number&quot;&gt;1500&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	options=&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&amp;lt;VLAN_MTU&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ether &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;a:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	inet6 &lt;span class=&quot;symbol&quot;&gt;fe80:&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:ff&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:fe00&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;a1c%en4 prefixlen &lt;span class=&quot;number&quot;&gt;64&lt;/span&gt; scopeid &lt;span class=&quot;number&quot;&gt;0x4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	inet &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;4.100&lt;/span&gt; netmask &lt;span class=&quot;number&quot;&gt;0xffffff00&lt;/span&gt; broadcast &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;4.255&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	nd6 options=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;lt;PERFORMNUD&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;symbol&quot;&gt;media:&lt;/span&gt; autoselect (&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;baseTX &amp;lt;full-duplex,flow-control&amp;gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;symbol&quot;&gt;status:&lt;/span&gt; active&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;bridge0:&lt;/span&gt; flags=&lt;span class=&quot;number&quot;&gt;8863&lt;/span&gt;&amp;lt;UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST&amp;gt; mtu &lt;span class=&quot;number&quot;&gt;1500&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	options=&lt;span class=&quot;number&quot;&gt;63&lt;/span&gt;&amp;lt;RXCSUM,TXCSUM,TSO4,TSO6&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ether &lt;span class=&quot;number&quot;&gt;02&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:ba&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;symbol&quot;&gt;Configuration:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		id &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; priority &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; hellotime &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; fwddelay &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		maxage &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; holdcnt &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; proto stp maxaddr &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; timeout &lt;span class=&quot;number&quot;&gt;1200&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		root id &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; priority &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ifcost &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; port &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		ipfilter disabled flags &lt;span class=&quot;number&quot;&gt;0x2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;symbol&quot;&gt;member:&lt;/span&gt; en1 flags=&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&amp;lt;LEARNING,DISCOVER&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	        ifmaxaddr &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; port &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt; priority &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; path cost &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;symbol&quot;&gt;member:&lt;/span&gt; en2 flags=&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&amp;lt;LEARNING,DISCOVER&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	        ifmaxaddr &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; port &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt; priority &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; path cost &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	nd6 options=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;lt;PERFORMNUD&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;symbol&quot;&gt;media:&lt;/span&gt; &amp;lt;unknown type&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;symbol&quot;&gt;status:&lt;/span&gt; inactive&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ping&lt;/code&gt;&lt;br&gt;检查网络是否联通&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;LeoMacBookPro:&lt;/span&gt;~ Leo$ ping -c &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; www.baidu.com  &lt;span class=&quot;comment&quot;&gt;# ping 百度，`-c 3` 表示三次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PING www.a.shifen.com (&lt;span class=&quot;number&quot;&gt;220.181&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;112.244&lt;/span&gt;)&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;56&lt;/span&gt; data bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;64&lt;/span&gt; bytes from &lt;span class=&quot;number&quot;&gt;220.181&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;112.244&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt; icmp_seq=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ttl=&lt;span class=&quot;number&quot;&gt;55&lt;/span&gt; time=&lt;span class=&quot;number&quot;&gt;2.329&lt;/span&gt; ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;64&lt;/span&gt; bytes from &lt;span class=&quot;number&quot;&gt;220.181&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;112.244&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt; icmp_seq=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; ttl=&lt;span class=&quot;number&quot;&gt;55&lt;/span&gt; time=&lt;span class=&quot;number&quot;&gt;2.651&lt;/span&gt; ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;64&lt;/span&gt; bytes from &lt;span class=&quot;number&quot;&gt;220.181&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;112.244&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt; icmp_seq=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; ttl=&lt;span class=&quot;number&quot;&gt;55&lt;/span&gt; time=&lt;span class=&quot;number&quot;&gt;9.731&lt;/span&gt; ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--- www.a.shifen.com ping statistics ---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; packets transmitted, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; packets received, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;% packet loss&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;round-trip min/avg/max/stddev = &lt;span class=&quot;number&quot;&gt;2.329&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;4.904&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;9.731&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;3.416&lt;/span&gt; ms&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;whereis&lt;/code&gt;&lt;br&gt;查看命令路径&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;LeoMacBookPro:&lt;/span&gt;~ Leo$ whereis ls&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/bin/ls&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;二、小技巧&quot;&gt;&lt;a href=&quot;#二、小技巧&quot; class=&quot;headerlink&quot; title=&quot;二、小技巧&quot;&gt;&lt;/a&gt;二、小技巧&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;clear&lt;/code&gt; 清屏&lt;br&gt;直接按 Ctrl + L&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;按 tab 键会自动补全&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;按 ↑ 键会显示上一次使用过的命令&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ctrl + C 终端下操作的强制退出&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;history&lt;/code&gt; 显示历史命令&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;⌘ + +/- 终端下放大/缩小字体&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编辑状态下的退出命令&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;wq&lt;/code&gt;   保存并退出&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wq!&lt;/code&gt;  强制保存并退出&lt;/li&gt;
&lt;li&gt;&lt;code&gt;q!&lt;/code&gt;   强制退出，不保存&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设置终端语法高亮等&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vim ~/.vimrc # 创建一个编译环境的脚本的副本&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 编辑输入以下内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;syntax on     # 开启语法高亮&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set tabstop=4 # 设置tab缩进 一次4个字节&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set number    # 设置行号&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;联系与支持&quot;&gt;&lt;a href=&quot;#联系与支持&quot; class=&quot;headerlink&quot; title=&quot;联系与支持&quot;&gt;&lt;/a&gt;联系与支持&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Mail: devtip#163.com&lt;/li&gt;
&lt;li&gt;GitHub:    &lt;a href=&quot;https://github.com/LeoiOS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LeoiOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果你想对我的开发或是开源项目进行支持捐助，请扫描下方二维码，谢谢！👇&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/alipay.png&quot; alt=&quot;LEO&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/macbook03.png&quot; class=&quot;full-image&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Mac 是一款开发利器，对开发者是相当友好的。&lt;br&gt;比如系统自带终端（Terminal）对 vim 命令的支持，就大幅提升了日常开发的便捷度。&lt;/p&gt;
    
    </summary>
    
      <category term="Mac" scheme="http://note.leodev.me/categories/Mac/"/>
    
      <category term="Vim" scheme="http://note.leodev.me/categories/Mac/Vim/"/>
    
      <category term="Terminal" scheme="http://note.leodev.me/categories/Mac/Vim/Terminal/"/>
    
      <category term="Command" scheme="http://note.leodev.me/categories/Mac/Vim/Terminal/Command/"/>
    
    
      <category term="Mac" scheme="http://note.leodev.me/tags/Mac/"/>
    
      <category term="Vim" scheme="http://note.leodev.me/tags/Vim/"/>
    
      <category term="Terminal" scheme="http://note.leodev.me/tags/Terminal/"/>
    
      <category term="Command" scheme="http://note.leodev.me/tags/Command/"/>
    
  </entry>
  
  <entry>
    <title>【iOS】如何让 Xcode 自动更新 SVN Version 到 Build</title>
    <link href="http://note.leodev.me/2016/02/02/iOS-Auto-Build-From-SVN-Version/"/>
    <id>http://note.leodev.me/2016/02/02/iOS-Auto-Build-From-SVN-Version/</id>
    <published>2016-02-02T06:25:04.000Z</published>
    <updated>2016-03-22T07:30:42.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/svn03.png&quot; class=&quot;full-image&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们每天都要打包给测试，甚至一天打 N 个包，而每次打包都被要求改 Build，十分麻烦。&lt;br&gt;幸运的是，我们可以通过 Shell 脚本来省略这个本来异常繁琐过程。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;环境：&lt;br&gt;OS X 10.11.3&lt;br&gt;Xcode 7.2&lt;br&gt;SVN 1.9&lt;/p&gt;
&lt;h2 id=&quot;一、升级-Mac-自带-SVN&quot;&gt;&lt;a href=&quot;#一、升级-Mac-自带-SVN&quot; class=&quot;headerlink&quot; title=&quot;一、升级 Mac 自带 SVN&quot;&gt;&lt;/a&gt;一、升级 Mac 自带 SVN&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;下载最新 SVN&lt;br&gt;打开 &lt;a href=&quot;http://www.wandisco.com/subversion/download#osx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.wandisco.com/subversion/download#osx&lt;/a&gt; ，找到适合你系统的下载链接。&lt;br&gt;因为目前没有 OS X 10.11 的下载链接，我们先选择 10.10 的版本（测试可用）：&lt;br&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/01.png&quot; alt=&quot;By http://LeoDev.me&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装到本机&lt;br&gt;直接打开下载的文件，按提示安装，然后打开终端执行以下命令，把 SVN 的路径加到 PATH 中：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vim ~&lt;span class=&quot;regexp&quot;&gt;/.bash_profile&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;按 i 进入编辑状态，粘贴以下内容：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;export PATH=&lt;span class=&quot;regexp&quot;&gt;/opt/subversion&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/bin:$PATH&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;按 esc -&amp;gt; shift + ; -&amp;gt; 输入 wq -&amp;gt; 回车保存。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重启终端&lt;br&gt;运行以下命令检测 SVN 版本号，应该是 1.9.3 左右，OK。&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;svn --version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;二、配置-Xcode-内的-SVN&quot;&gt;&lt;a href=&quot;#二、配置-Xcode-内的-SVN&quot; class=&quot;headerlink&quot; title=&quot;二、配置 Xcode 内的 SVN&quot;&gt;&lt;/a&gt;二、配置 Xcode 内的 SVN&lt;/h2&gt;&lt;p&gt;执行以下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd /Applications/Xcode.app/Contents/Developer/usr/bin/  &lt;span class=&quot;comment&quot;&gt;# 进入 Xcode 存放 SVN 命令的子目录  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo mkdir backupsvn                                    &lt;span class=&quot;comment&quot;&gt;# 创建备份目录  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo mv svn* backupsvn/                                 &lt;span class=&quot;comment&quot;&gt;# 把旧的 SVN 相关文件移动到备份目录  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo ln -s /opt/subversion/bin/svn* ./                  &lt;span class=&quot;comment&quot;&gt;# 把新的 SVN 文件复制到当前目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;重启 Xcode。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;更新了 Xcode 请重新执行以上操作！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;三、自动-Build-脚本&quot;&gt;&lt;a href=&quot;#三、自动-Build-脚本&quot; class=&quot;headerlink&quot; title=&quot;三、自动 Build 脚本&quot;&gt;&lt;/a&gt;三、自动 Build 脚本&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;脚本内容&lt;br&gt;打开项目，找到对应的 TARGET，点击 Build Phases -&amp;gt; New Run Script Phase：&lt;br&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/02.png&quot; alt=&quot;By http://LeoDev.me&quot;&gt;&lt;br&gt;在黑色输入框里面输入以下脚本内容：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;REV=&lt;span class=&quot;string&quot;&gt;`svnversion -nc | /usr/bin/sed -e &#39;s/^[^:]*://;s/[A-Za-z]//&#39;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/usr/libexec/PlistBuddy -c &lt;span class=&quot;string&quot;&gt;&quot;Set :CFBundleVersion $REV&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;$&amp;#123;INFOPLIST_FILE&amp;#125;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;点下其他地方以确定输入，执行 ⌘ + B 编译或者 ⌘ + R 运行，就可以看到效果了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果是 Git&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;REV=&lt;span class=&quot;string&quot;&gt;`git rev-list HEAD | wc -l | awk &#39;&amp;#123;print $1&amp;#125;&#39;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;HEAD 是分支名，代表当前分支，可以直接替换成其他分支名，如 master 等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果仅仅只想在 Release（如 Archive 等）的时候更新 Build，可以在外层加入以下判断：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [ &lt;span class=&quot;string&quot;&gt;&quot;$&amp;#123;CONFIGURATION&amp;#125;&quot;&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;Release&quot;&lt;/span&gt; ]; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;参考资料：&lt;a href=&quot;http://stackoverflow.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://stackoverflow.com&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;联系与捐赠&quot;&gt;&lt;a href=&quot;#联系与捐赠&quot; class=&quot;headerlink&quot; title=&quot;联系与捐赠&quot;&gt;&lt;/a&gt;联系与捐赠&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Mail: devtip#163.com&lt;/li&gt;
&lt;li&gt;GitHub:    &lt;a href=&quot;https://github.com/LeoiOS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LeoiOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果你想对我的开发或是开源项目进行支持捐助，请扫描下方二维码，谢谢！👇&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/alipay.png&quot; alt=&quot;LEO&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/svn03.png&quot; class=&quot;full-image&quot; /&gt;&lt;/p&gt;
&lt;p&gt;我们每天都要打包给测试，甚至一天打 N 个包，而每次打包都被要求改 Build，十分麻烦。&lt;br&gt;幸运的是，我们可以通过 Shell 脚本来省略这个本来异常繁琐过程。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://note.leodev.me/categories/iOS/"/>
    
      <category term="SVN" scheme="http://note.leodev.me/categories/iOS/SVN/"/>
    
      <category term="shell" scheme="http://note.leodev.me/categories/iOS/SVN/shell/"/>
    
    
      <category term="iOS" scheme="http://note.leodev.me/tags/iOS/"/>
    
      <category term="SVN" scheme="http://note.leodev.me/tags/SVN/"/>
    
      <category term="shell" scheme="http://note.leodev.me/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>【iOS】开发技巧——自动滚动的 SearchBar</title>
    <link href="http://note.leodev.me/2016/01/20/iOS-tip-auto-scroll-search-bar/"/>
    <id>http://note.leodev.me/2016/01/20/iOS-tip-auto-scroll-search-bar/</id>
    <published>2016-01-20T05:37:40.000Z</published>
    <updated>2016-03-22T10:00:50.000Z</updated>
    
    <content type="html">&lt;p&gt;在 iOS 开发中，有一个非常常用的控件——SearchBar，在很多 App 中，如 QQ、微信、网易云音乐等，使用频率都是相当的高。这个 SearchBar 你可以选择系统的 UISearchBar，也可以让美工给你切一个出来，当然你足够牛逼自己切也行，请收下我的膝盖。今天的主题显然不是探讨怎么切 SearchBar，毕竟我打的 Tag 是 iOS 不是 PS。&lt;br&gt;好，进入正题，我在使用各种“大型 App” &lt;sup&gt;①&lt;/sup&gt; 的过程中，发现它们都做了一个有趣的效果——SearchBar 的自动滚动。&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;好无聊啊好无聊啊好无聊啊MD写完这篇我先睡会读者请无视这句话。。&lt;/blockquote&gt;

&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;先谈谈总体设计&quot;&gt;&lt;a href=&quot;#先谈谈总体设计&quot; class=&quot;headerlink&quot; title=&quot;先谈谈总体设计&quot;&gt;&lt;/a&gt;先谈谈总体设计&lt;/h2&gt;&lt;p&gt;我们知道，就目前较为大众接受的设计而言，SearchBar 应该处于导航栏的下方，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/SearchBarDemo.png&quot; alt=&quot;By http://LeoDev.me&quot;&gt;&lt;/p&gt;
&lt;p&gt;那么上文所述的这个效果是怎么样的呢？继续上图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/IMG_1022.PNG&quot; alt=&quot;By http://LeoDev.me&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/IMG_1023.PNG&quot; alt=&quot;By http://LeoDev.me&quot;&gt;&lt;/p&gt;
&lt;p&gt;这是系统的设置界面的两张截图，QQ、微信截图我就不放了，你可以自己打开瞅一瞅，并非是为了保护什么隐私，这个时代还谈什么个人隐私。&lt;/p&gt;
&lt;p&gt;你可以打开设置，尝试轻轻拖动界面，放开手，你会发现顶部的 SearchBar 时而主动显示，时而又主动隐藏，别的不说，用户体验莫名大增。那么问题来了。&lt;/p&gt;
&lt;p&gt;效果看过了，现在该来尝试实现了，这才是本文的重点。刚开始看到这个效果我想做做但我的大脑是拒绝的，但是一想这好感大增的用户体验，我的大脑还是屈服了。一开始我也以为这个实现起来很难很难的，然后我就忧伤地敲了敲代码，然后发现，卧槽这么简单？！&lt;/p&gt;
&lt;h2 id=&quot;代码实现&quot;&gt;&lt;a href=&quot;#代码实现&quot; class=&quot;headerlink&quot; title=&quot;代码实现&quot;&gt;&lt;/a&gt;代码实现&lt;/h2&gt;&lt;p&gt;关键代码如下，利用 UIScrollView 的代理方法即可。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#pragma mark - UIScrollView Delegate&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)scrollViewDidEndDragging:(&lt;span class=&quot;built_in&quot;&gt;UIScrollView&lt;/span&gt; *)scrollView willDecelerate:(&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)decelerate &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGPoint&lt;/span&gt; contentOffset = scrollView.contentOffset;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (contentOffset.y &amp;lt; &lt;span class=&quot;number&quot;&gt;22.0&lt;/span&gt;f) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [scrollView setContentOffset:&lt;span class=&quot;built_in&quot;&gt;CGPointZero&lt;/span&gt; animated:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (contentOffset.y &amp;lt; &lt;span class=&quot;number&quot;&gt;44.0&lt;/span&gt;f) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [scrollView setContentOffset:&lt;span class=&quot;built_in&quot;&gt;CGPointMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;44.0&lt;/span&gt;f) animated:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;至于为什么取 22 和 44 就不用讲了吧，SearchBar 高度约定俗成清一色 44，当然如果你的美工给你指定了另外的高度，你自己换算下就可以了，除二会除吧。&lt;/p&gt;
&lt;p&gt;真应了那句话，&lt;strong&gt;大道至简&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&quot;特色注解&quot;&gt;&lt;a href=&quot;#特色注解&quot; class=&quot;headerlink&quot; title=&quot;特色注解&quot;&gt;&lt;/a&gt;特色注解&lt;/h2&gt;&lt;p&gt;①“大型 App”：即活跃用户较多的 App，比如 &lt;a href=&quot;https://itunes.apple.com/cn/app/id1067564880&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;德玛西亚&lt;/a&gt; 0.0&lt;/p&gt;
&lt;h2 id=&quot;联系与捐赠&quot;&gt;&lt;a href=&quot;#联系与捐赠&quot; class=&quot;headerlink&quot; title=&quot;联系与捐赠&quot;&gt;&lt;/a&gt;联系与捐赠&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Mail: devtip#163.com&lt;/li&gt;
&lt;li&gt;GitHub:    &lt;a href=&quot;https://github.com/LeoiOS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LeoiOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果你想对我的开发或是开源项目进行支持捐助，请扫描下方二维码，谢谢！👇&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/alipay.png&quot; alt=&quot;LEO&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在 iOS 开发中，有一个非常常用的控件——SearchBar，在很多 App 中，如 QQ、微信、网易云音乐等，使用频率都是相当的高。这个 SearchBar 你可以选择系统的 UISearchBar，也可以让美工给你切一个出来，当然你足够牛逼自己切也行，请收下我的膝盖。今天的主题显然不是探讨怎么切 SearchBar，毕竟我打的 Tag 是 iOS 不是 PS。&lt;br&gt;好，进入正题，我在使用各种“大型 App” &lt;SUP&gt;①&lt;/SUP&gt; 的过程中，发现它们都做了一个有趣的效果——SearchBar 的自动滚动。&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;好无聊啊好无聊啊好无聊啊MD写完这篇我先睡会读者请无视这句话。。&lt;/blockquote&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://note.leodev.me/categories/iOS/"/>
    
      <category term="Tip" scheme="http://note.leodev.me/categories/iOS/Tip/"/>
    
    
      <category term="iOS" scheme="http://note.leodev.me/tags/iOS/"/>
    
      <category term="Tip" scheme="http://note.leodev.me/tags/Tip/"/>
    
  </entry>
  
  <entry>
    <title>Git 常用命令</title>
    <link href="http://note.leodev.me/2016/01/08/git-commonly-used-commands/"/>
    <id>http://note.leodev.me/2016/01/08/git-commonly-used-commands/</id>
    <published>2016-01-08T08:55:20.000Z</published>
    <updated>2016-03-04T06:59:48.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://i1.tietuku.com/1a6bb2a4426f9bfb.jpg&quot; class=&quot;full-image&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2 id=&quot;基本配置命令&quot;&gt;&lt;a href=&quot;#基本配置命令&quot; class=&quot;headerlink&quot; title=&quot;基本配置命令&quot;&gt;&lt;/a&gt;基本配置命令&lt;/h2&gt;&lt;h3 id=&quot;Git-常用命令速查表&quot;&gt;&lt;a href=&quot;#Git-常用命令速查表&quot; class=&quot;headerlink&quot; title=&quot;Git 常用命令速查表&quot;&gt;&lt;/a&gt;Git 常用命令速查表&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://i1.tietuku.com/db5ace15c21fd180.jpg&quot; class=&quot;full-image&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;使用-Git-生成-SSH-密钥&quot;&gt;&lt;a href=&quot;#使用-Git-生成-SSH-密钥&quot; class=&quot;headerlink&quot; title=&quot;使用 Git 生成 SSH 密钥&quot;&gt;&lt;/a&gt;使用 Git 生成 SSH 密钥&lt;/h3&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh-keygen -t rsa -C &lt;span class=&quot;string&quot;&gt;&quot;xxx@xxx.com&quot;&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;# YourEmail&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;设置全局用户名和邮箱&quot;&gt;&lt;a href=&quot;#设置全局用户名和邮箱&quot; class=&quot;headerlink&quot; title=&quot;设置全局用户名和邮箱&quot;&gt;&lt;/a&gt;设置全局用户名和邮箱&lt;/h3&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git config --global user.name &lt;span class=&quot;string&quot;&gt;&quot;xxx&quot;&lt;/span&gt;           &lt;span class=&quot;comment&quot;&gt;# YourName&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --global user.email &lt;span class=&quot;string&quot;&gt;&quot;xxx@xxx.com&quot;&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;# YourEmail&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;初始化仓库&quot;&gt;&lt;a href=&quot;#初始化仓库&quot; class=&quot;headerlink&quot; title=&quot;初始化仓库&quot;&gt;&lt;/a&gt;初始化仓库&lt;/h3&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;添加文件到暂存区&quot;&gt;&lt;a href=&quot;#添加文件到暂存区&quot; class=&quot;headerlink&quot; title=&quot;添加文件到暂存区&quot;&gt;&lt;/a&gt;添加文件到暂存区&lt;/h3&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git add &amp;lt;filename&amp;gt;  &lt;span class=&quot;comment&quot;&gt;# 添加指定文件到暂存区&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git add .           &lt;span class=&quot;comment&quot;&gt;# 添加工作区所有文件到暂存区&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git add -i          &lt;span class=&quot;comment&quot;&gt;# 交互方式添加文件到暂存区&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git add -u          &lt;span class=&quot;comment&quot;&gt;# 将工作区中已经变动的文件添加到暂存区，当新增加的文件不会被添加&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;提交文件到仓库&quot;&gt;&lt;a href=&quot;#提交文件到仓库&quot; class=&quot;headerlink&quot; title=&quot;提交文件到仓库&quot;&gt;&lt;/a&gt;提交文件到仓库&lt;/h3&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git commit -m &lt;span class=&quot;string&quot;&gt;&quot;描述信息&quot;&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;# 提交更新&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git commit -am &lt;span class=&quot;string&quot;&gt;&quot;描述信息&quot;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 如果工作目录中仅是已跟踪的文件被修改或被删除，使用此提交命令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;分支的创建、删除、和平、切换、查看&quot;&gt;&lt;a href=&quot;#分支的创建、删除、和平、切换、查看&quot; class=&quot;headerlink&quot; title=&quot;分支的创建、删除、和平、切换、查看&quot;&gt;&lt;/a&gt;分支的创建、删除、和平、切换、查看&lt;/h3&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git branch                              &lt;span class=&quot;comment&quot;&gt;# 查看 Git 仓库中已有的分支&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git branch &amp;lt;BranchName&amp;gt; [StartingPoint] &lt;span class=&quot;comment&quot;&gt;# 创建分支，如果没有分支起点的话，则默认在当前分支的最新提交上创建分支&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git checkout &amp;lt;BranchName&amp;gt;               &lt;span class=&quot;comment&quot;&gt;# 切换分支&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git checkout -b &amp;lt;BranchName&amp;gt;            &lt;span class=&quot;comment&quot;&gt;# 创建同时切换到新分支&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git merge &amp;lt;BranchName&amp;gt;                  &lt;span class=&quot;comment&quot;&gt;# 合并分支&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git branch -d &amp;lt;BranchName&amp;gt;              &lt;span class=&quot;comment&quot;&gt;# 删除指定分支（如果分支没有被合并过，该命令会执行失败）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git branch -D &amp;lt;BranchName&amp;gt;              &lt;span class=&quot;comment&quot;&gt;# 删除指定分支，不管有没有被合并过&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gitk                                    &lt;span class=&quot;comment&quot;&gt;# 用图形界面查看分支提交历史&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;合并分支过程中如果发生冲突则需要自己手动解决冲突，然后再提交。有冲突时，Git 会显示哪个文件有冲突，并在冲突的文件中加上特殊的标识符号，解决完冲突后，要手动去掉这些被添加的标识符号。如果冲突比较复杂的话，最好使用其他工具来协助，通过 &lt;code&gt;git mergetool&lt;/code&gt; 来启动。冲突一般是在不同的分支上对同一文件的同一位置内容进行了改动，并已提交到仓库中，这样在合并的时候就会发生冲突。&lt;/p&gt;
&lt;h3 id=&quot;标签的添加、删除、查看&quot;&gt;&lt;a href=&quot;#标签的添加、删除、查看&quot; class=&quot;headerlink&quot; title=&quot;标签的添加、删除、查看&quot;&gt;&lt;/a&gt;标签的添加、删除、查看&lt;/h3&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git tag                                   &lt;span class=&quot;comment&quot;&gt;# 查看标签&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git tag &amp;lt;TagName&amp;gt;                         &lt;span class=&quot;comment&quot;&gt;# 创建简单的标签&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git tag -a &amp;lt;TagName&amp;gt; -m &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;CommitMessage&amp;gt;&#39;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 创建附加信息的标签&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git show &amp;lt;TagName&amp;gt;                        &lt;span class=&quot;comment&quot;&gt;# 通过标签查看信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git tag -d &amp;lt;TagName&amp;gt;                      &lt;span class=&quot;comment&quot;&gt;# 删除标签&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;标签可以在需要的地方，为某个提交对象创建别名，这样以后我们就可以通过标签来查看一些信息，创建分支等。&lt;/p&gt;
&lt;h3 id=&quot;查看工作目录状态&quot;&gt;&lt;a href=&quot;#查看工作目录状态&quot; class=&quot;headerlink&quot; title=&quot;查看工作目录状态&quot;&gt;&lt;/a&gt;查看工作目录状态&lt;/h3&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git status&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过 &lt;code&gt;git status&lt;/code&gt; 可以知道文件的状态（已修改未暂存、已删除、已修改并已暂存等待提交、未跟踪）。&lt;br&gt;在 Git 命令执行后，要养成通过 &lt;code&gt;git status&lt;/code&gt; 查看 git 状态的习惯，以便及时了解文件变化的情况。&lt;/p&gt;
&lt;h3 id=&quot;查看提交历史&quot;&gt;&lt;a href=&quot;#查看提交历史&quot; class=&quot;headerlink&quot; title=&quot;查看提交历史&quot;&gt;&lt;/a&gt;查看提交历史&lt;/h3&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git log -p  &lt;span class=&quot;comment&quot;&gt;# 显示每次提交文件变化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过 &lt;code&gt;git log&lt;/code&gt; 可以查看当前分支的所有提交历史，知道每次提交的 commit 对象的 ID 以及提交时附加的描述信息等。要显示更多的信息，需要使用其支持的选项，如 &lt;code&gt;git log -p&lt;/code&gt; 可以将每次提交的文件变化也显示出来。&lt;/p&gt;
&lt;h3 id=&quot;查看指定的提交对象&quot;&gt;&lt;a href=&quot;#查看指定的提交对象&quot; class=&quot;headerlink&quot; title=&quot;查看指定的提交对象&quot;&gt;&lt;/a&gt;查看指定的提交对象&lt;/h3&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git show commit_id  &lt;span class=&quot;comment&quot;&gt;# 查看指定的某次提交内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git show --all      &lt;span class=&quot;comment&quot;&gt;# 显示所有的提交历史内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git shortlog -s -n  &lt;span class=&quot;comment&quot;&gt;# 显示总的提交次数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过 &lt;code&gt;git log&lt;/code&gt; 可以显示整个提交历史，而通过 &lt;code&gt;git show commit-id&lt;/code&gt; 则可以查看指定的某次提交内容，当然 &lt;code&gt;git show -all&lt;/code&gt; 也可以显示出提交历史，另外还可以格式化显示内容。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; : commit-id 可以是 commit 对象对应的 ID，也可以是 HEAD，分支名，tag 等。&lt;/p&gt;
&lt;h3 id=&quot;查看工作区、暂存区、仓库之间的差异&quot;&gt;&lt;a href=&quot;#查看工作区、暂存区、仓库之间的差异&quot; class=&quot;headerlink&quot; title=&quot;查看工作区、暂存区、仓库之间的差异&quot;&gt;&lt;/a&gt;查看工作区、暂存区、仓库之间的差异&lt;/h3&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git diff            &lt;span class=&quot;comment&quot;&gt;# 比较工作区与暂存区的差异&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git diff HEAD       &lt;span class=&quot;comment&quot;&gt;# 比较工作区与仓库中最近一次的提交间的差异&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git diff --cached   &lt;span class=&quot;comment&quot;&gt;# 比较暂存区与仓库中最近一次提交的差异&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git blame filename  &lt;span class=&quot;comment&quot;&gt;# 可以列出该文件每次被修改的时间和内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;版本回退、撤销操作&quot;&gt;&lt;a href=&quot;#版本回退、撤销操作&quot; class=&quot;headerlink&quot; title=&quot;版本回退、撤销操作&quot;&gt;&lt;/a&gt;版本回退、撤销操作&lt;/h3&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git reflog                  &lt;span class=&quot;comment&quot;&gt;# 显示提交历史的简介&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git checkout -- filename    &lt;span class=&quot;comment&quot;&gt;# 丢弃工作区的修改&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git reset --hard HEAD^      &lt;span class=&quot;comment&quot;&gt;# 回退到上一个版本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git reset --hard commit_id  &lt;span class=&quot;comment&quot;&gt;# 回退到指定版本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git checkout -- filename    &lt;span class=&quot;comment&quot;&gt;# 恢复工作区被删除的指定文件（文件之前被提交到仓库中）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git checkout -f             &lt;span class=&quot;comment&quot;&gt;# 恢复工作区中所有被删除的文件（文件之前被提交到仓库中）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git ls-files -d             &lt;span class=&quot;comment&quot;&gt;# 列出工作区被删除的文件（文件之前被提交到仓库中）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;有时候，由于我们的误操作，产生了一些错误，我们发现后希望能够及时纠正这些因为误操作而产生的结果，将工作目录恢复到某个正常状态。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;撤销修改，但还没有添加到暂存区：&lt;br&gt;&lt;code&gt;git checkout -- filename&lt;/code&gt; 修改的文件会被恢复到上次提交时的状态，修改的内容会丢失。&lt;/li&gt;
&lt;li&gt;版本回退：&lt;br&gt;先通过 &lt;code&gt;git reflog&lt;/code&gt; 找到某个版本的 &lt;code&gt;commit_id&lt;/code&gt;，然后用 &lt;code&gt;git reset --hard commit_id&lt;/code&gt; 将工作目录的文件恢复到指定的版本。&lt;/li&gt;
&lt;li&gt;恢复工作区中被删除的文件（文件之前被提交到仓库中）：&lt;br&gt;&lt;code&gt;git checkout -- filename&lt;/code&gt; 或 &lt;code&gt;git checkout -f&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;备份工作区&quot;&gt;&lt;a href=&quot;#备份工作区&quot; class=&quot;headerlink&quot; title=&quot;备份工作区&quot;&gt;&lt;/a&gt;备份工作区&lt;/h3&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git stash                 &lt;span class=&quot;comment&quot;&gt;# 将工作区文件保存在 Git 内部栈中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git stash list            &lt;span class=&quot;comment&quot;&gt;# 列出 Git 内部栈中保存的工作区文件列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git stash apply stash_id  &lt;span class=&quot;comment&quot;&gt;# 恢复工作区到指定的内部栈状态&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git stash pop             &lt;span class=&quot;comment&quot;&gt;# 恢复工作区到上一个内部栈状态&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git stash clear           &lt;span class=&quot;comment&quot;&gt;# 清空 Git 内部栈&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果正在一个 develop 分支上正在开发新功能，但这时 master 分支（稳定版本）突然发现了 bug，并需要及时修复，而 develop 分支此时的工作还没有完成，且不希望将之前的工作就这样提交到仓库中时，这时就可以用 &lt;code&gt;git stash&lt;/code&gt; 来暂时保存这些状态到 Git 内部栈中，并用当前分支上一次的提交内容来恢复工作目录，然后切换到 master 分支进行 bug 修复工作，等修复完毕并提交到仓库上后，再使用 &lt;code&gt;git stash apply [stash@{0}]&lt;/code&gt; 或者 &lt;code&gt;git stash pop&lt;/code&gt; 将工作目录恢复到之前的状态，继续之前的工作。&lt;/p&gt;
&lt;p&gt;同时也可以多次使用 &lt;code&gt;git stash&lt;/code&gt; 将未提交的代码压入到 Git 栈中，但当多次使用 &lt;code&gt;git stash&lt;/code&gt; 命令后，Git栈里将充满了未提交的代码，这时候到底要用哪个版本来恢复工作目录呢？&lt;code&gt;git stash list&lt;/code&gt; 命令可以将当前的 Git 栈信息打印出来，我们只需要将找到对应的版本号，例如使用 &lt;code&gt;git stash apply stash@{1}&lt;/code&gt; 就可以用版本号为 stash@{1} 的内容来恢复工作目录。&lt;/p&gt;
&lt;p&gt;当 Git 栈中所有的内容都被恢复后，可以使用 &lt;code&gt;git stash clear&lt;/code&gt; 来将栈清空。&lt;/p&gt;
&lt;h3 id=&quot;将当前工作区目录文件压缩归档&quot;&gt;&lt;a href=&quot;#将当前工作区目录文件压缩归档&quot; class=&quot;headerlink&quot; title=&quot;将当前工作区目录文件压缩归档&quot;&gt;&lt;/a&gt;将当前工作区目录文件压缩归档&lt;/h3&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git archive --format=zip -o arch.zip HEAD&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git arch --format zip head&amp;gt;arch.zip&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;远程操作&quot;&gt;&lt;a href=&quot;#远程操作&quot; class=&quot;headerlink&quot; title=&quot;远程操作&quot;&gt;&lt;/a&gt;远程操作&lt;/h2&gt;&lt;p&gt;Git 相比其他版本控制软件的一个优点就是大多数的操作都可以在本地进行，而不用管远程的仓库，因为操作是在本地，且操作的数据也是在本地，加上指针等原因，所以执行的速度就会比较快。 在多人协作的项目中，就需要涉及与远程仓库交互的问题，主要是如何从远程仓库抓取最新数据合并到自己的本地分支上，将自己的最新成果分享给其他人或让别人审查等 。&lt;/p&gt;
&lt;h3 id=&quot;远程仓库的克隆、添加、查看&quot;&gt;&lt;a href=&quot;#远程仓库的克隆、添加、查看&quot; class=&quot;headerlink&quot; title=&quot;远程仓库的克隆、添加、查看&quot;&gt;&lt;/a&gt;远程仓库的克隆、添加、查看&lt;/h3&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git remote                                                      &lt;span class=&quot;comment&quot;&gt;# 显示已添加的远程仓库名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git remote -v                                                   &lt;span class=&quot;comment&quot;&gt;# 显示已添加的远程仓库名和地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git remote add &amp;lt;ServerRepositoryName&amp;gt; &amp;lt;ServerRepositoryAddress&amp;gt; &lt;span class=&quot;comment&quot;&gt;# 在本地添加远程仓库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git remote rm &amp;lt;ServerRepositoryName&amp;gt;                            &lt;span class=&quot;comment&quot;&gt;# 删除本地添加的远程仓库名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git remote rename &amp;lt;OriginRepositoryName&amp;gt; &amp;lt;NewRepositoryName&amp;gt;    &lt;span class=&quot;comment&quot;&gt;# 重命名远程仓库名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git clone &amp;lt;ServerRepositoryAddress&amp;gt; [LocalFolder]               &lt;span class=&quot;comment&quot;&gt;# 克隆远程仓库到本地&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git fetch &amp;lt;ServerRepositoryName&amp;gt;                                &lt;span class=&quot;comment&quot;&gt;# 从远程仓库抓取最新数据到本地但不与本地分支进行合并&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git pull &amp;lt;ServerRepositoryName&amp;gt;	&amp;lt;LocalBranchName&amp;gt;               &lt;span class=&quot;comment&quot;&gt;# 从远程仓库抓取最新数据并自动与本地分支进行合并&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push &amp;lt;ServerRepositoryName&amp;gt; &amp;lt;LocalBranchName&amp;gt;               &lt;span class=&quot;comment&quot;&gt;# 将本地仓库推送到远程仓库中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git remote show &amp;lt;ServerRepositoryName&amp;gt;                          &lt;span class=&quot;comment&quot;&gt;# 查看远程仓库信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git remote show                                                 &lt;span class=&quot;comment&quot;&gt;# 查看所有远程仓库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push &amp;lt;ServerRepositoryName&amp;gt; &amp;lt;ServerTagName&amp;gt;                 &lt;span class=&quot;comment&quot;&gt;# 将标签推送到远程仓库（Git 默认不推送标签）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;协同流程&quot;&gt;&lt;a href=&quot;#协同流程&quot; class=&quot;headerlink&quot; title=&quot;协同流程&quot;&gt;&lt;/a&gt;协同流程&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Fork远程项目&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;把Fork的项目clone到本地&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;执行以下命令，将别人的库添加为远端库&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git remote add &amp;lt;ServerRepositoryName&amp;gt; &amp;lt;ServerTagName&amp;gt; &lt;span class=&quot;comment&quot;&gt;# 远端仓库名 远端的分支&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;运行以下命令，拉去合并到本地&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git pull &amp;lt;ServerRepositoryName&amp;gt; &amp;lt;ServerTagName&amp;gt; &lt;span class=&quot;comment&quot;&gt;# 远端仓库名 远端分支名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编辑内容&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;commit 之后 push 到自己的库&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;登录 Github，在你的首页可以看到一个 pull request 按钮，点击它，填写一些说明信息，提交即可。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在本地编辑内容前必须执行 pull 操作同步别人的远端库（这样避免冲突）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;实用技巧&quot;&gt;&lt;a href=&quot;#实用技巧&quot; class=&quot;headerlink&quot; title=&quot;实用技巧&quot;&gt;&lt;/a&gt;实用技巧&lt;/h3&gt;&lt;p&gt;当手头工作没有完成时，先把工作现场 &lt;code&gt;git stash&lt;/code&gt; 一下，然后去修复 bug，修复后，再使用 &lt;code&gt;git stash pop&lt;/code&gt;，回到工作现场。&lt;/p&gt;
&lt;h3 id=&quot;多人协作技巧&quot;&gt;&lt;a href=&quot;#多人协作技巧&quot; class=&quot;headerlink&quot; title=&quot;多人协作技巧&quot;&gt;&lt;/a&gt;多人协作技巧&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;查看远程库信息，使用 &lt;code&gt;git remote -v&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;本地新建的分支如果不推送到远程，对其他人就是不可见的；&lt;/li&gt;
&lt;li&gt;从本地推送分支，使用 &lt;code&gt;git push&lt;/code&gt; 远程仓库名 分支名，如果推送失败，先用 &lt;code&gt;git pull&lt;/code&gt; 抓取远程的新提交；&lt;/li&gt;
&lt;li&gt;在本地创建和远程分支对应的分支，使用 &lt;code&gt;git checkout -b branch-name origin/branch-name&lt;/code&gt;，本地和远程分支的名称最好一致；&lt;/li&gt;
&lt;li&gt;建立本地分支和远程分支的关联，使用 &lt;code&gt;git branch --set-upstream branch-name origin/branch-name&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;从远程抓取分支，使用 &lt;code&gt;git pull&lt;/code&gt;，如果有冲突，要先处理冲突。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Git-常用命令思维导图&quot;&gt;&lt;a href=&quot;#Git-常用命令思维导图&quot; class=&quot;headerlink&quot; title=&quot;Git 常用命令思维导图&quot;&gt;&lt;/a&gt;Git 常用命令思维导图&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://i1.tietuku.com/6c6da0aa17a881b0.jpg&quot; class=&quot;full-image&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;本文转自 &lt;a href=&quot;http://xiamo.tk&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;夏末’S NOTE&lt;/strong&gt;&lt;/a&gt;，已取得原作者授权，略有删改。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;联系与捐赠&quot;&gt;&lt;a href=&quot;#联系与捐赠&quot; class=&quot;headerlink&quot; title=&quot;联系与捐赠&quot;&gt;&lt;/a&gt;联系与捐赠&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Mail: devtip#163.com&lt;/li&gt;
&lt;li&gt;GitHub:    &lt;a href=&quot;https://github.com/LeoiOS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LeoiOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果你想对我的开发或是开源项目进行支持捐助，请扫描下方二维码，谢谢！👇&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/alipay.png&quot; alt=&quot;LEO&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://i1.tietuku.com/1a6bb2a4426f9bfb.jpg&quot; class=&quot;full-image&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="git" scheme="http://note.leodev.me/categories/git/"/>
    
      <category term="iOS" scheme="http://note.leodev.me/categories/git/iOS/"/>
    
      <category term="Linux" scheme="http://note.leodev.me/categories/git/iOS/Linux/"/>
    
      <category term="Debian" scheme="http://note.leodev.me/categories/git/iOS/Linux/Debian/"/>
    
    
      <category term="iOS" scheme="http://note.leodev.me/tags/iOS/"/>
    
      <category term="git" scheme="http://note.leodev.me/tags/git/"/>
    
      <category term="Linux" scheme="http://note.leodev.me/tags/Linux/"/>
    
      <category term="Debian" scheme="http://note.leodev.me/tags/Debian/"/>
    
  </entry>
  
  <entry>
    <title>【HTML JS】通过 apple-itunes-app 在网页顶端显示你的 iOS App</title>
    <link href="http://note.leodev.me/2016/01/04/HTML-JS-apple-itunes-app/"/>
    <id>http://note.leodev.me/2016/01/04/HTML-JS-apple-itunes-app/</id>
    <published>2016-01-04T03:20:35.000Z</published>
    <updated>2016-03-04T07:08:26.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/IMG_124801.png&quot; alt=&quot;by http://LeoDev.me&quot;&gt;&lt;/p&gt;
&lt;p&gt;二〇一六了，新年好。用一个小知识点开启新的一年吧~&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2 id=&quot;方法&quot;&gt;&lt;a href=&quot;#方法&quot; class=&quot;headerlink&quot; title=&quot;方法&quot;&gt;&lt;/a&gt;方法&lt;/h2&gt;&lt;p&gt;如上如所示的效果是怎么实现的呢？其实也很简单，在你的网页的 &lt;code&gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&lt;/code&gt; 中加入以下代码就可以了，官方实现哦~&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;meta name=&lt;span class=&quot;string&quot;&gt;&quot;apple-itunes-app&quot;&lt;/span&gt; content=&lt;span class=&quot;string&quot;&gt;&quot;app-id=1067564880&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;app-id 请更换成你的 App 在 &lt;a href=&quot;https://itunesconnect.apple.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iTunes (点击前往)&lt;/a&gt; 中的 Apple ID，如下图所示位置：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/QQ20160105-0@2x.png&quot; alt=&quot;via http://LeoDev.me&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Done~&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这个 &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; 标签是干嘛的呢？其实它是告诉 iPhone 的 Safari 浏览器，这个网站对应的 App 是什么，然后在页面上面显示一个 App Store 的 banner。&lt;/p&gt;
&lt;p&gt;如果你没有安装这个 App 就会显示“显示”按钮，如果安装了则会显示“打开”按钮~&lt;/p&gt;
&lt;h2 id=&quot;参考效果&quot;&gt;&lt;a href=&quot;#参考效果&quot; class=&quot;headerlink&quot; title=&quot;参考效果&quot;&gt;&lt;/a&gt;参考效果&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;请用 iPhone 上的 Safari 浏览器打开&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://leodev.me&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://leodev.me&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/IMG_1248.PNG&quot; alt=&quot;By Leo&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.zhihu.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.zhihu.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/IMG_0990.PNG&quot; alt=&quot;By Leo&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;联系与捐赠&quot;&gt;&lt;a href=&quot;#联系与捐赠&quot; class=&quot;headerlink&quot; title=&quot;联系与捐赠&quot;&gt;&lt;/a&gt;联系与捐赠&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Mail: devtip#163.com&lt;/li&gt;
&lt;li&gt;GitHub:    &lt;a href=&quot;https://github.com/LeoiOS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LeoiOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果你想对我的开发或是开源项目进行支持捐助，请扫描下方二维码，谢谢！👇&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/alipay.png&quot; alt=&quot;LEO&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/IMG_124801.png&quot; alt=&quot;by http://LeoDev.me&quot;&gt;&lt;/p&gt;
&lt;p&gt;二〇一六了，新年好。用一个小知识点开启新的一年吧~&lt;/p&gt;
    
    </summary>
    
      <category term="HTML" scheme="http://note.leodev.me/categories/HTML/"/>
    
      <category term="node.js" scheme="http://note.leodev.me/categories/HTML/node-js/"/>
    
    
      <category term="HTML" scheme="http://note.leodev.me/tags/HTML/"/>
    
      <category term="node.js" scheme="http://note.leodev.me/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title>CocoaPods 的安装、使用和常见问题</title>
    <link href="http://note.leodev.me/2015/12/31/The-installation-and-usage-of-CocoaPods-and-FAQ/"/>
    <id>http://note.leodev.me/2015/12/31/The-installation-and-usage-of-CocoaPods-and-FAQ/</id>
    <published>2015-12-31T06:03:08.000Z</published>
    <updated>2016-03-22T10:01:05.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/QQ20151231-0%402x.png&quot; class=&quot;full-image&quot;&gt;&lt;/p&gt;
&lt;p&gt;二〇一五年的最后一天，我还在这里布道。自己都醉了。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2 id=&quot;一、介绍&quot;&gt;&lt;a href=&quot;#一、介绍&quot; class=&quot;headerlink&quot; title=&quot;一、介绍&quot;&gt;&lt;/a&gt;一、介绍&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://cocoapods.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CocoaPods&lt;/a&gt; 是 iOS 项目的依赖管理工具，该项目源码在 &lt;a href=&quot;https://github.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt; 上管理。开发 iOS 项目不可避免地要使用第三方开源库，CocoaPods 的出现使得我们可以节省设置和第三方开源库的时间。&lt;/p&gt;
&lt;p&gt;在使用 CocoaPods 之前，开发项目需要用到第三方开源库的时候，我们需要：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;把开源库的源代码复制到项目中&lt;/li&gt;
&lt;li&gt;添加一些依赖框架和动态库&lt;/li&gt;
&lt;li&gt;设置 -ObjC，-fno-objc-arc 等参数&lt;/li&gt;
&lt;li&gt;管理他们的更新&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在使用 CocoaPods 后，我们只需要把用到的开源库放到一个名为 Podfile 的文件中，然后执行 pod install。Cocoapods 就会自动将这些第三方开源库的源码下载下来，并且为我们的工程设置好相应的系统依赖和编译参数。&lt;/p&gt;
&lt;h2 id=&quot;二、原理&quot;&gt;&lt;a href=&quot;#二、原理&quot; class=&quot;headerlink&quot; title=&quot;二、原理&quot;&gt;&lt;/a&gt;二、原理&lt;/h2&gt;&lt;p&gt;CocoaPods 的原理是将所有的依赖库都放到另一个名为 Pods 的项目中，然后让主项目依赖 Pods 项目，这样，源码管理工作都从主项目移到了 Pods 项目中。Pods 项目最终会编译成一个名为 libPods.a 的文件，主项目只需要依赖这个 .a 文件即可。&lt;/p&gt;
&lt;h2 id=&quot;三、安装&quot;&gt;&lt;a href=&quot;#三、安装&quot; class=&quot;headerlink&quot; title=&quot;三、安装&quot;&gt;&lt;/a&gt;三、安装&lt;/h2&gt;&lt;p&gt;CocoaPods 可以方便地通过 Mac 自带的 &lt;a href=&quot;https://rubygems.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RubyGems&lt;/a&gt; 安装。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;先升级 gem&lt;/p&gt;
&lt;p&gt;打开 Terminal（终端），输入以下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo gem update --system&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;升级成功后会提示：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;RubyGems system software updated&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;继续执行：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo gem install cocoapods&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;执行完这句如果报以下错误（没有请跳过）：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;ERROR:&lt;/span&gt; Could &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; find a valid gem &lt;span class=&quot;string&quot;&gt;&#39;cocoapods&#39;&lt;/span&gt; (&amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)， here is &lt;span class=&quot;symbol&quot;&gt;why:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Unable to download data from &lt;span class=&quot;symbol&quot;&gt;https:&lt;/span&gt;/&lt;span class=&quot;regexp&quot;&gt;/rubygems.org/&lt;/span&gt; - &lt;span class=&quot;symbol&quot;&gt;Errno:&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:ETIMEDOUT&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt; Operation timed out - connect(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) (&lt;span class=&quot;symbol&quot;&gt;https:&lt;/span&gt;/&lt;span class=&quot;regexp&quot;&gt;/rubygems.org/latest&lt;/span&gt;_specs.&lt;span class=&quot;number&quot;&gt;4.8&lt;/span&gt;.gz)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;ERROR:&lt;/span&gt; Possible &lt;span class=&quot;symbol&quot;&gt;alternatives:&lt;/span&gt; cocoapods&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这是因为 ruby 的软件源 &lt;a href=&quot;https://rubygems.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://rubygems.org&lt;/a&gt; 使用亚马逊的云服务，被我大天朝屏蔽了，需要更新一下 ruby 的源。依次执行以下命令行：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gem sources -l &lt;span class=&quot;comment&quot;&gt;#查看当前 ruby 的源&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gem sources --remove &lt;span class=&quot;symbol&quot;&gt;https:&lt;/span&gt;/&lt;span class=&quot;regexp&quot;&gt;/rubygems.org/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gem sources -a &lt;span class=&quot;symbol&quot;&gt;https:&lt;/span&gt;/&lt;span class=&quot;regexp&quot;&gt;/ruby.taobao.org/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gem sources -l&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;接下来进行安装，执行：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod setup&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Terminal 会停留在 &lt;code&gt;Setting up CocoaPods master repo&lt;/code&gt; 这个状态一段时间，是因为要进行下载安装，而且目录比较大，需要耐心等待一下。如果想加快速度，可使用 CocoaPods 的镜像索引。（文章末尾附使用镜像索引的方法，&lt;a href=&quot;/2015/12/31/The-installation-and-usage-of-CocoaPods-and-FAQ/#u9644_uFF1A_u5982_u4F55_u4F7F_u7528_u955C_u50CF_u7D22_u5F15&quot;&gt;点击跳转&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;安装成功后，你会看到以下提示:&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Setup completed&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;至此安装完成！&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;四、使用&quot;&gt;&lt;a href=&quot;#四、使用&quot; class=&quot;headerlink&quot; title=&quot;四、使用&quot;&gt;&lt;/a&gt;四、使用&lt;/h2&gt;&lt;p&gt;进入 iOS 项目所在的目录（项目根目录）。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;详细讲解版（老鸟请直接跳过）&lt;/p&gt;
&lt;p&gt;执行命令：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;touch Podfile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这句是说新建一个名为 Podfile 的文件（不能写成别的名字，也可以自己在工程根目录里面直接新建）。&lt;/p&gt;
&lt;p&gt;然后对该文件进行编辑，执行命令：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;open -e Podfile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第一次执行这个命令，会有一个空白文件打开，可以先放在一边。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Podfile&lt;/strong&gt; 文件的格式应该类似以下：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;platform &lt;span class=&quot;symbol&quot;&gt;:ios&lt;/span&gt;， &lt;span class=&quot;string&quot;&gt;&#39;7.0&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pod &lt;span class=&quot;string&quot;&gt;&#39;AFNetworking&#39;&lt;/span&gt;， &lt;span class=&quot;string&quot;&gt;&#39;~&amp;gt; 2.6.3&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pod &lt;span class=&quot;string&quot;&gt;&#39;LCTabBarController&#39;&lt;/span&gt;， &lt;span class=&quot;string&quot;&gt;&#39;~&amp;gt; 1.2.2&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pod &lt;span class=&quot;string&quot;&gt;&#39;LCBannerView&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;需要 &lt;strong&gt;注意&lt;/strong&gt; 以下几点：&lt;/p&gt;
&lt;p&gt;a. platform 那一行，&lt;code&gt;ios&lt;/code&gt; 三个字母都要小写，而且与前面的冒号之间不能有间隔。&lt;br&gt;b. 后面的版本号也可以不写，但是有些开源库对版本是有要求的，比如要在 iOS 7.0 以上才能运行，遇到这样的开源库就需要写上版本号。&lt;br&gt;c. platform 下面就是 CocoaPods 需要集成的开源库，根据你的需要确定集成成些库。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;老鸟版&lt;/p&gt;
&lt;p&gt;执行命令：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vim Podfile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;举个栗子 🌰：&lt;/p&gt;
&lt;p&gt;我要集成 &lt;a href=&quot;https://github.com/AFNetworking/AFNetworking&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AFNetworking&lt;/a&gt; 这个库类，需要在 CocoaPods 里面先搜索是否有需要的库，在 Terminal 中输入：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod search AFNetworking&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;回车之后就可以看到和你搜索的关键字相关的一些库类，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/QQ20151231-1%402x.png&quot; alt=&quot;By Leo&quot;&gt;&lt;/p&gt;
&lt;p&gt;其中第一个就是我们需要的，把 &lt;code&gt;pod ‘AFNetworking’, ‘~&amp;gt;3.0.3’&lt;/code&gt; 复制到我们的 Podfile 文件中，保存。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;AFNetworking 2.x： &lt;code&gt;pod ‘AFNetworking’, ‘~&amp;gt;2.6.3’&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后在 Terminal 中执行 ：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 建议使用下一句命令，在天朝速度更快（不更新本地仓库）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pod install --verbose --no-repo-update&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样，AFNetworking 就已经下载完成并设置好了编译参数和依赖。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;相关阅读：&lt;a href=&quot;http://leodev.me/2015/12/15/[iOS]-How-To-Setting-HTTP-Header-With-AFNetworking/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【iOS】使用 AFNetworking 如何设置 HTTP Header&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以后使用的时候切记以下两点：&lt;/p&gt;
&lt;p&gt;a. 从此以后需要使用 CocoaPods 生成的 *.xcworkspace 文件来打开工程，而不是使用以前的 *.xcodeproj 文件&lt;br&gt;b. 每次更改了 Podfile 文件，都需要执行一次 &lt;code&gt;pod update&lt;/code&gt; 命令（建议使用 &lt;code&gt;pod update --verbose --no-repo-update&lt;/code&gt;）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;pod install&lt;/code&gt; 与 &lt;code&gt;pod update&lt;/code&gt; 的区别&lt;/p&gt;
&lt;p&gt;当执行 &lt;code&gt;pod install&lt;/code&gt;之后，除了 Podfile，还会生成一个名为 &lt;strong&gt;Podfile.lock&lt;/strong&gt; 的文件，它会 &lt;strong&gt;锁定&lt;/strong&gt; 当前各依赖库的版本，之后即使多次执行 &lt;code&gt;pod install&lt;/code&gt; 也不会更改版本，只有执行 &lt;code&gt;pod update&lt;/code&gt; 才会改变 Podfile.lock。在多人协作的时候，这样可以防止第三方库升级时候造成大家各自的第三方库版本不一致。所以在提交版本的时候不能把它落下，也不要添加到 .gitignore 中.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;五、常见问题&quot;&gt;&lt;a href=&quot;#五、常见问题&quot; class=&quot;headerlink&quot; title=&quot;五、常见问题&quot;&gt;&lt;/a&gt;五、常见问题&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;升级 OS X 10.11 后，运行 pod 命令出现如下错误：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-&lt;span class=&quot;symbol&quot;&gt;bash:&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;pod:&lt;/span&gt; command &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; found&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;解决方法：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo gem install -n /usr/local/bin cocoapods&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;错误：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[!] Invalid Podfile file: undefined local variable or method &amp;apos;en_US&amp;apos; for #&amp;lt;Pod::Podfile:0x00000102a5d8b0&amp;gt;. Updating CocoaPods might fix the issue.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;原因：单引号格式，可能是手动输入导致&lt;/p&gt;
&lt;p&gt;解决办法：前往 系统偏好设置 - 键盘 - 文本 - 将“使用智能引号和破折号”一项取消勾选 - 再将 Podfile 里面的单（双）引号修改一下&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;错误：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ArgumentError - invalid byte sequence in US-ASCII&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;原因：字符集错误&lt;/p&gt;
&lt;p&gt;解决办法：&lt;br&gt;使用 &lt;code&gt;locale&lt;/code&gt; 命令查看当前的字符集，如果都是 zh，需要执行以下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;export LC_ALL=en_US.UTF-&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export LANG=en_US.UTF-&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后再使用 &lt;code&gt;locale&lt;/code&gt; 命令查看，已经改过来了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;错误：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[!] The YMTea [Debug] target overrides the OTHER_LDFLAGS build setting defined in &amp;apos;Pods/Target Support Files/Pods/Pods.debug.xcconfig&amp;apos;. This can lead to problems with the CocoaPods installation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Use the $(inherited) flag， or&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Remove the build settings from the target.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[!] The YMTea [Release] target overrides the OTHER_LDFLAGS build setting defined in &amp;apos;Pods/Target Support Files/Pods/Pods.release.xcconfig&amp;apos;. This can lead to problems with the CocoaPods installation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- Use the &amp;apos;$(inherited)&amp;apos; flag， or&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- Remove the build settings from the target.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;原因：我是在已有项目中集成 CocoaPods 的时候遇到这个问题。原因是项目 Target 中做了一些设置，CocoaPods 也做了默认的设置，如果两个设置结果不一致，就会造成问题。&lt;/p&gt;
&lt;p&gt;解决方法：我想要使用 CocoaPods 中的设置，分别在我的项目中定义 PODS_ROOT 和 Other Linker Flags 的地方（build settings），拷贝输入值 &lt;code&gt;$(inherited)&lt;/code&gt; ，进入终端，执行 &lt;code&gt;pod update&lt;/code&gt;。警告没了，回到 Xcode，build 通过。&lt;/p&gt;
&lt;p&gt;网上还流行另外一种简单粗暴的方法：点击项目文件 project.xcodeproj，右键显示包内容，用文本编辑器打开 project.pbxproj，删除 OTHER_LDFLAGS 的地方，保存。（这种我没试过，建议实在搞不定再尝试）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;错误：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[!] Oh no， an error occurred.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;It appears to have originated from your Podfile at line 2.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Search for existing GitHub issues similar to yours:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;https://github.com/CocoaPods/CocoaPods/search?q=%2FUsers%2Fxiao6%2FMusic%2FGI06%E5%AE%9E%E8%AE%AD%E8%8A%B8%E8%8C%97%E8%8C%B6%E5%8F%B6%2FYMTea%2FPodfile%3A2%3A+syntax+error%2C+unexpected+%27%3A%27%2C+expecting+end-of-input%0Aplatform+%3A+ios%2C+%277.0%27%0A++++++++++%5E&amp;amp;type=Issues&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;If none exists， create a ticket， with the template displayed above， on:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;https://github.com/CocoaPods/CocoaPods/issues/new&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Be sure to first read the contributing guide for details on how to properly submit a ticket:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;https://github.com/CocoaPods/CocoaPods/blob/master/CONTRIBUTING.md&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Don&amp;apos;t forget to anonymize any private data!&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;原因：这个问题比较蛋疼，弄了好久，仔细看发现就是因为 Podfile 文件里面 &lt;code&gt;platform&lt;/code&gt; 那一行，冒号和 &lt;code&gt;ios&lt;/code&gt; 之间多了一个空格。。。。&lt;/p&gt;
&lt;p&gt;解决方法：删掉 Podfile 文件里面 &lt;code&gt;platform&lt;/code&gt; 那一行冒号和 &lt;code&gt;ios&lt;/code&gt; 之间的空格即可。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;附：如何使用镜像索引&quot;&gt;&lt;a href=&quot;#附：如何使用镜像索引&quot; class=&quot;headerlink&quot; title=&quot;附：如何使用镜像索引&quot;&gt;&lt;/a&gt;附：如何使用镜像索引&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;/2015/12/31/The-installation-and-usage-of-CocoaPods-and-FAQ/#u4E09_u3001_u5B89_u88C5&quot;&gt;&lt;strong&gt;⬆️ 返回安装步骤&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;所有项目的 podspec 文件都托管在 &lt;a href=&quot;https://github.com/CocoaPods/Specs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/CocoaPods/Specs&lt;/a&gt;，第一次执行 &lt;code&gt;pod setup&lt;/code&gt; 时，CocoaPods 会将这些 podspec 索引文件更新到本地的 ~/.cocoapods 目录下，这个索引文件比较大，所以第一次更新时非常慢。友好人士在国内的服务器建立了 CocoaPods 索引库的镜像，所以执行索引跟新操作时候会快很多。具体操作方法如下:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod repo remove master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pod repo add master https://gitcafe.com/akuandev/Specs.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pod repo update&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这是使用 GitCafe 上的镜像，将以上代码中的 &lt;code&gt;https://gitcafe.com/akuandev/Specs.git&lt;/code&gt; 替换成 &lt;code&gt;http://git.oschina.net/akuandev/Specs.git&lt;/code&gt; 即可使用 OSChina 上的镜像。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文来自简书：&lt;a href=&quot;http://www.jianshu.com/p/6e5c0f78200a&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CocoaPods的安装使用和常见问题&lt;/a&gt; ——By &lt;a href=&quot;http://www.jianshu.com/users/31b10e251fd8/latest_articles&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CoderAO&lt;/a&gt;，略有修改。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;以上&quot;&gt;&lt;a href=&quot;#以上&quot; class=&quot;headerlink&quot; title=&quot;以上&quot;&gt;&lt;/a&gt;以上&lt;/h2&gt;&lt;p&gt;你好，二〇一六。&lt;/p&gt;
&lt;h2 id=&quot;联系与捐赠&quot;&gt;&lt;a href=&quot;#联系与捐赠&quot; class=&quot;headerlink&quot; title=&quot;联系与捐赠&quot;&gt;&lt;/a&gt;联系与捐赠&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Mail: devtip#163.com&lt;/li&gt;
&lt;li&gt;GitHub:    &lt;a href=&quot;https://github.com/LeoiOS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LeoiOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果你想对我的开发或是开源项目进行支持捐助，请扫描下方二维码，谢谢！👇&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/alipay.png&quot; alt=&quot;LEO&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/QQ20151231-0%402x.png&quot; class=&quot;full-image&quot; /&gt;&lt;/p&gt;
&lt;p&gt;二〇一五年的最后一天，我还在这里布道。自己都醉了。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://note.leodev.me/categories/iOS/"/>
    
      <category term="CocoaPods" scheme="http://note.leodev.me/categories/iOS/CocoaPods/"/>
    
    
      <category term="iOS" scheme="http://note.leodev.me/tags/iOS/"/>
    
      <category term="CocoaPods" scheme="http://note.leodev.me/tags/CocoaPods/"/>
    
  </entry>
  
  <entry>
    <title>Mac 上 Hexo 的安装、使用和常见问题</title>
    <link href="http://note.leodev.me/2015/12/30/The-Installation-Usage-And-QA-of-Hexo-on-Mac/"/>
    <id>http://note.leodev.me/2015/12/30/The-Installation-Usage-And-QA-of-Hexo-on-Mac/</id>
    <published>2015-12-30T04:37:11.000Z</published>
    <updated>2016-03-22T10:01:12.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/hexojs/hexo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt; 是一款基于 &lt;a href=&quot;https://github.com/nodejs/node&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node.js&lt;/a&gt; 的静态博客框架，也是目前非常流行的个人博客框架。截至本文发布，在 &lt;a href=&quot;https://github.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt; 上已有 7846 个 Star 和 1306 个 Fork。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/QQ20151230-0%402x.png&quot; class=&quot;full-image&quot;&gt;&lt;/p&gt;
&lt;p&gt;我的博客也是基于 Hexo 搭建而成的，在此谨向 Hexo 的作者表示感谢。&lt;/p&gt;
&lt;!--![By Leo](http://7xl8ia.com1.z0.glb.clouddn.com/QQ20151230-0%402x.png)--&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2 id=&quot;特性&quot;&gt;&lt;a href=&quot;#特性&quot; class=&quot;headerlink&quot; title=&quot;特性&quot;&gt;&lt;/a&gt;特性&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;风一般的速度&lt;br&gt;Hexo 基于 node.js，支持多进程，几百篇文章也可瞬间生成。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;流畅的撰写&lt;br&gt;支持 GitHub Flavored Markdown 和所有 &lt;a href=&quot;http://octopress.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Octopress&lt;/a&gt; 的插件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可扩展性&lt;br&gt;Hexo 支持 EJS、Swig 和 Stylus。通过插件支持 Haml、Jade 和 Less.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下面将介绍如何在 Mac 上安装和使用 Hexo，也附上一些常见问题。&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装 &lt;a href=&quot;http://brew.sh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;BrewHome&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ruby -e &lt;span class=&quot;string&quot;&gt;&quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;命令如果失效，请前往 BrewHome 官网 &lt;a href=&quot;http://brew.sh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://brew.sh&lt;/a&gt;（中文：&lt;a href=&quot;http://brew.sh/index_zh-cn.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://brew.sh/index_zh-cn.html&lt;/a&gt;）查看最新命令。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装 &lt;a href=&quot;https://github.com/nodejs/node&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node.js&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew install node&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装 &lt;a href=&quot;https://github.com/hexojs/hexo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;建议&lt;/strong&gt; 不要在主目录下面执行后续操作，先创建一个文件夹再操作，如：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir ~&lt;span class=&quot;regexp&quot;&gt;/Documents/hexo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd ~&lt;span class=&quot;regexp&quot;&gt;/Documents/hexo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后执行安装：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;至此 &lt;strong&gt;安装完成！&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;升级 Hexo&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm update hexo -g&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;卸载 Hexo&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm uninstall hexo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;写新博客&quot;&gt;&lt;a href=&quot;#写新博客&quot; class=&quot;headerlink&quot; title=&quot;写新博客&quot;&gt;&lt;/a&gt;写新博客&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;创建 Markdown 文件&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 新建文章&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo new &lt;span class=&quot;string&quot;&gt;&quot;Your Note&#39;s Name&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 新建页面&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo new page &lt;span class=&quot;string&quot;&gt;&quot;About&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;根据命令行提示去往当前目录下的 &lt;code&gt;source/_posts/&lt;/code&gt; 文件夹下，即可看到新创建的博客。&lt;/p&gt;
&lt;p&gt;推荐使用 &lt;a href=&quot;https://atom.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Atom&lt;/a&gt; 编辑 Markdown 文件。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;发布到-GitHub&quot;&gt;&lt;a href=&quot;#发布到-GitHub&quot; class=&quot;headerlink&quot; title=&quot;发布到 GitHub&quot;&gt;&lt;/a&gt;发布到 GitHub&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;清除历史文件&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo clean&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;渲染新文件&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;建议每次渲染前都执行一次 &lt;code&gt;hexo clean&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo g&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这一步你可以简单理解为把你的 Markdown 文件生成 HTML 文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;发布到 GitHub&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;至此 &lt;strong&gt;发布完成！&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;本地预览&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo s&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打开浏览器，输入网址 &lt;a href=&quot;http://localhost:4040&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4040&lt;/a&gt;，回车即可看到预览。&lt;/p&gt;
&lt;p&gt;预览是个不错的功能。建议每次写完新文章，先不要急着发布到 GitHub，先本地预览下效果，适度修改，修改合适了再执行发布。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;常见问题&quot;&gt;&lt;a href=&quot;#常见问题&quot; class=&quot;headerlink&quot; title=&quot;常见问题&quot;&gt;&lt;/a&gt;常见问题&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;有朋友反应在搭建 Hexo 时，在执行 &lt;code&gt;hexo deploy&lt;/code&gt; 后，出现 &lt;code&gt;ERROR: Deployer not found: git&lt;/code&gt; 的错误：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i4.tietuku.com/de758513cf8314f5.jpg&quot; alt=&quot;By 老王&quot;&gt;&lt;/p&gt;
&lt;p&gt;怎么解决呢？很简单，在 vim 输入以下命令，回车即可：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-deployer-git --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;耐心等待片刻，然后你应该能看到如下提示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i4.tietuku.com/4e40c4b16bde4ca3.png&quot; alt=&quot;By Leo&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;搞定！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;继续尝试 &lt;code&gt;hexo d&lt;/code&gt;，这下就能成功了！&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;拓展&quot;&gt;&lt;a href=&quot;#拓展&quot; class=&quot;headerlink&quot; title=&quot;拓展&quot;&gt;&lt;/a&gt;拓展&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;生成 sitemap 站点地图&lt;/p&gt;
&lt;p&gt;百度站长：&lt;a href=&quot;http://zhanzhang.baidu.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://zhanzhang.baidu.com&lt;/a&gt;&lt;br&gt;谷歌站点地图：&lt;a href=&quot;https://www.google.com/webmasters/tools/sitemap-list&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.google.com/webmasters/tools/sitemap-list&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装插件&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# google sitemap&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-generator-sitemap --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# baidu sitemap&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-generator-baidu-sitemap --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;在站点目录的 _config.yml 中添加如下代码：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;sitemap:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;symbol&quot;&gt;path:&lt;/span&gt; sitemap.xml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;baidusitemap:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;symbol&quot;&gt;path:&lt;/span&gt; baidusitemap.xml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;运行 &lt;code&gt;hexo d&lt;/code&gt; 命令，在 public 目录下就能看到生成的 sitemap.xml 和 baidusitemap.xml。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RSS&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-generator-feed --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;一些想说的&quot;&gt;&lt;a href=&quot;#一些想说的&quot; class=&quot;headerlink&quot; title=&quot;一些想说的&quot;&gt;&lt;/a&gt;一些想说的&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://pages.github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub Pages&lt;/a&gt; 作为一个开放的、免费的博客后台，给我们的才华和抱怨一个不错的施展和发泄空间。它和 &lt;a href=&quot;https://github.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt; 一样在天朝还能正常访问，希望各位同仁抱着一份感恩的心，不谈守护，请至少不要影响这篇乐土。&lt;/p&gt;
&lt;p&gt;敬请遵守当地政府的法律法规，和谐发展，谢谢！&lt;/p&gt;
&lt;h2 id=&quot;联系与捐赠&quot;&gt;&lt;a href=&quot;#联系与捐赠&quot; class=&quot;headerlink&quot; title=&quot;联系与捐赠&quot;&gt;&lt;/a&gt;联系与捐赠&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Mail: devtip#163.com&lt;/li&gt;
&lt;li&gt;GitHub:    &lt;a href=&quot;https://github.com/LeoiOS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LeoiOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果你想对我的开发或是开源项目进行支持捐助，请扫描下方二维码，谢谢！👇&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/alipay.png&quot; alt=&quot;LEO&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/hexojs/hexo&quot;&gt;Hexo&lt;/a&gt; 是一款基于 &lt;a href=&quot;https://github.com/nodejs/node&quot;&gt;node.js&lt;/a&gt; 的静态博客框架，也是目前非常流行的个人博客框架。截至本文发布，在 &lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt; 上已有 7846 个 Star 和 1306 个 Fork。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xl8ia.com1.z0.glb.clouddn.com/QQ20151230-0%402x.png&quot; class=&quot;full-image&quot; /&gt;&lt;/p&gt;
&lt;p&gt;我的博客也是基于 Hexo 搭建而成的，在此谨向 Hexo 的作者表示感谢。&lt;/p&gt;
&lt;!--![By Leo](http://7xl8ia.com1.z0.glb.clouddn.com/QQ20151230-0%402x.png)--&gt;
    
    </summary>
    
      <category term="node.js" scheme="http://note.leodev.me/categories/node-js/"/>
    
      <category term="hexo" scheme="http://note.leodev.me/categories/node-js/hexo/"/>
    
      <category term="Mac" scheme="http://note.leodev.me/categories/node-js/hexo/Mac/"/>
    
    
      <category term="Mac" scheme="http://note.leodev.me/tags/Mac/"/>
    
      <category term="node.js" scheme="http://note.leodev.me/tags/node-js/"/>
    
      <category term="hexo" scheme="http://note.leodev.me/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>【iOS】系统是怎么实现 UIAlertView 的？</title>
    <link href="http://note.leodev.me/2015/12/29/iOS-How-to-implement-the-UIAlertView-of-the-system/"/>
    <id>http://note.leodev.me/2015/12/29/iOS-How-to-implement-the-UIAlertView-of-the-system/</id>
    <published>2015-12-29T08:15:11.000Z</published>
    <updated>2016-03-22T10:00:35.000Z</updated>
    
    <content type="html">&lt;p&gt;前段时间在写 &lt;a href=&quot;https://github.com/LeoiOS/LCActionSheet&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LCActionSheet&lt;/a&gt; 这个库的时候，收到一个老兄 &lt;a href=&quot;https://github.com/weiwei1035&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;weiwei1035&lt;/a&gt; 提到的一个 UIWindow 相关的 &lt;a href=&quot;https://github.com/LeoiOS/LCActionSheet/issues/1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Issue&lt;/a&gt;，说：当 &lt;code&gt;statusBarStyle&lt;/code&gt; 为 &lt;code&gt;UIStatusBarStyleLightContent&lt;/code&gt; 时，背景不会遮挡 &lt;code&gt;statusBar&lt;/code&gt;。这位老兄还很热情地写了解决方案，并 &lt;a href=&quot;https://github.com/LeoiOS/LCActionSheet/pull/2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pr&lt;/a&gt; 给了我，我简单验证过就愉快的合并了。&lt;/p&gt;
&lt;p&gt;我就喜欢这种提了问题自己想解决方案最后还能让我少写些代码的人，再次表扬。&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;但，凡事要知其然，也要知其所以然。&lt;/blockquote&gt;

&lt;p&gt;作为一名具有高度责（hao）任（qi）感（xin）的 Coder，我会把这事就这么简单放过吗？当然不会！后来我仔细想了想这个 Issue，思考了这个 window 的必要性：就为了一个 UI 效果搞这么复杂真的有必要吗？&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;开始我其实也觉得没必要。但是我觉得吧，我说了不算，系统说了才算。毕竟这些代码都是运行在 iOS 系统上，照系统来肯定不会错。那怎么办呢？那就来研究研究 &lt;code&gt;UIAlertView&lt;/code&gt; 的实现好了。&lt;/p&gt;
&lt;h2 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h2&gt;&lt;p&gt;探索系统 &lt;code&gt;UIAlertView&lt;/code&gt; 的实现，重点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;alloc init 的时候干了些什么？&lt;/li&gt;
&lt;li&gt;&lt;code&gt;- (void)show;&lt;/code&gt; 的时候干了些什么？&lt;/li&gt;
&lt;li&gt;当 alertView dismiss 的时候又干了些什么？&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;做任何事，最好是先想好思路。思路完善了，做起事情来才能游刃有余。&lt;/p&gt;
&lt;p&gt;首先，我觉得系统 &lt;code&gt;UIAlertView&lt;/code&gt; 的实现过程是这样的：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当 &lt;code&gt;UIAlertView&lt;/code&gt; alloc init 的时候，只是创建了一个 &lt;code&gt;UIAlertView&lt;/code&gt; 实例（如：&lt;code&gt;myAlertView&lt;/code&gt;），它并没有被添加到父 view 上。&lt;/li&gt;
&lt;li&gt;当调用 &lt;code&gt;[myAlertView show]&lt;/code&gt; 的时候，系统创建一个新的 &lt;code&gt;UIWindow&lt;/code&gt; 实例（如：&lt;code&gt;alertWindow&lt;/code&gt;），设为当前 application 的 keyWindow（如：&lt;code&gt;originKeyWindow&lt;/code&gt;），并保存原有的 keyWindow 指针，然后把 &lt;code&gt;alertView&lt;/code&gt; 添加到这个新建的 &lt;code&gt;alertWindow&lt;/code&gt; 上，此时 &lt;code&gt;alertView&lt;/code&gt; 就显示在设备屏幕上了。（动画过程略）&lt;/li&gt;
&lt;li&gt;当 &lt;code&gt;alertView&lt;/code&gt; 需要消失的时候，系统先把 &lt;code&gt;alertView&lt;/code&gt; 从 &lt;code&gt;alertWindow&lt;/code&gt; 上移除：&lt;code&gt;[alertView removeFromSuperView]&lt;/code&gt;，然后再设置 application 的 keyWindow 为之前保存的 &lt;code&gt;originKeyWindow&lt;/code&gt;，再设置 &lt;code&gt;alertWindow.hide = YES&lt;/code&gt; 来销毁 &lt;code&gt;alertWindow&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Over！&lt;/p&gt;
&lt;p&gt;那么我猜想的到底对不对呢？让我们用代码检验下就知道了。&lt;br&gt;（其实我当时根本就没检验因为我就是这么自信哈哈哈）&lt;/p&gt;
&lt;h2 id=&quot;代码检验&quot;&gt;&lt;a href=&quot;#代码检验&quot; class=&quot;headerlink&quot; title=&quot;代码检验&quot;&gt;&lt;/a&gt;代码检验&lt;/h2&gt;&lt;p&gt;1、首先新建一个项目，就叫 &lt;code&gt;UIAlertViewDemo&lt;/code&gt; 好了。&lt;br&gt;2、打开 &lt;code&gt;ViewController.m&lt;/code&gt;，编辑代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;ViewController.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#define KEY_WINDOW  [UIApplication sharedApplication].keyWindow&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ViewController&lt;/span&gt; () &amp;lt;&lt;span class=&quot;title&quot;&gt;UIAlertViewDelegate&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ViewController&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)viewDidLoad &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; viewDidLoad];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view.backgroundColor = [&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; whiteColor];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;UIAlertView&lt;/span&gt; *alertView = [[&lt;span class=&quot;built_in&quot;&gt;UIAlertView&lt;/span&gt; alloc] initWithTitle:&lt;span class=&quot;string&quot;&gt;@&quot;Title&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                        message:&lt;span class=&quot;string&quot;&gt;@&quot;message&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                       delegate:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                              cancelButtonTitle:&lt;span class=&quot;string&quot;&gt;@&quot;ok&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                              otherButtonTitles:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;origin key window: %p&quot;&lt;/span&gt;, KEY_WINDOW);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [alertView show];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#pragma mark - UIAlertView Delegate&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *  点 alertView 上面的 btn 时调用，alertView 还在&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)alertView:(&lt;span class=&quot;built_in&quot;&gt;UIAlertView&lt;/span&gt; *)alertView clickedButtonAtIndex:(&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)buttonIndex &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;when clicked key window: %p&quot;&lt;/span&gt;, KEY_WINDOW);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *  alertView 将要消失时调用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)alertView:(&lt;span class=&quot;built_in&quot;&gt;UIAlertView&lt;/span&gt; *)alertView willDismissWithButtonIndex:(&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)buttonIndex &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;alert view will dismiss key window: %p&quot;&lt;/span&gt;, KEY_WINDOW);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *  alertView 已经消失时调用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)alertView:(&lt;span class=&quot;built_in&quot;&gt;UIAlertView&lt;/span&gt; *)alertView didDismissWithButtonIndex:(&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)buttonIndex &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;alert view did dismiss key window: %p&quot;&lt;/span&gt;, KEY_WINDOW);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;**&lt;br&gt;3、Run，点击 alertView 的 ok 按钮，看看输出结果：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-29&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;02.397&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;UIAlertViewDemo&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;4057&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;484684&lt;/span&gt;] origin key window: &lt;span class=&quot;number&quot;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-29&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;04.564&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;UIAlertViewDemo&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;4057&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;484684&lt;/span&gt;] when clicked key window: &lt;span class=&quot;number&quot;&gt;0x7faa12840080&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-29&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;04.564&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;UIAlertViewDemo&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;4057&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;484684&lt;/span&gt;] alert view will dismiss key window: &lt;span class=&quot;number&quot;&gt;0x7faa12840080&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-29&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;04.978&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;UIAlertViewDemo&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;4057&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;484684&lt;/span&gt;] alert view did dismiss key window: &lt;span class=&quot;number&quot;&gt;0x7faa1151a720&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;咦，后面的打印确实比较符合猜想，但是这个开始的 &lt;code&gt;origin key window: 0x0&lt;/code&gt; 是什么鬼？！噢，差点忘了，当代码走到这里的时候，还没有 keyWindow。&lt;/p&gt;
&lt;p&gt;4、那么我们这么改一下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;去项目的 General 中，删除 Main Interface 的值（之前值为 Main）&lt;/li&gt;
&lt;li&gt;去 &lt;code&gt;AppDelegate.m&lt;/code&gt; 中，修改如下代码：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)application:(&lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt; *)application didFinishLaunchingWithOptions:(&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *)launchOptions &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.window = [[&lt;span class=&quot;built_in&quot;&gt;UIWindow&lt;/span&gt; alloc] initWithFrame:[&lt;span class=&quot;built_in&quot;&gt;UIScreen&lt;/span&gt; mainScreen].bounds];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.window makeKeyAndVisible];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.window.rootViewController = [[ViewController alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样，当我们创建这个 &lt;code&gt;ViewController&lt;/code&gt; 的实例的时候，application 的 keyWindow 就是存在的了。&lt;/p&gt;
&lt;p&gt;5、然后我们再重复第 3 步：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-29&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;38&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;08.024&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;UIAlertViewDemo&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;4227&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;502055&lt;/span&gt;] origin key window: &lt;span class=&quot;number&quot;&gt;0x7ff742c2b910&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-29&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;38&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;09.543&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;UIAlertViewDemo&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;4227&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;502055&lt;/span&gt;] when clicked key window: &lt;span class=&quot;number&quot;&gt;0x7ff74540a6f0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-29&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;38&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;09.543&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;UIAlertViewDemo&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;4227&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;502055&lt;/span&gt;] alert view will dismiss key window: &lt;span class=&quot;number&quot;&gt;0x7ff74540a6f0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-29&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;38&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;09.956&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;UIAlertViewDemo&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;4227&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;502055&lt;/span&gt;] alert view did dismiss key window: &lt;span class=&quot;number&quot;&gt;0x7ff742c2b910&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过对比内存地址，我们可以得出：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;UIAlertView 实例在 show 之前，并没有添加到父 view 上。&lt;/li&gt;
&lt;li&gt;只有当调用 &lt;code&gt;- (void)show;&lt;/code&gt; 方法的时候，系统才会新建一个 UIWindow 实例并把 alertView 实例添加上去，并把这个新建的 window 设为 application 的 keyWindow，并保存 originKeyWindow。&lt;/li&gt;
&lt;li&gt;当 alertView 实例从屏幕上消失时，系统会依次销毁 alertView 和新建的 window，然后把之前保存的 originKeyWindow 重新设为 application 的 keyWindow。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;嗯，验证通过。我真是个天才哈哈哈。&lt;/p&gt;
&lt;h2 id=&quot;结语&quot;&gt;&lt;a href=&quot;#结语&quot; class=&quot;headerlink&quot; title=&quot;结语&quot;&gt;&lt;/a&gt;结语&lt;/h2&gt;&lt;p&gt;我们平时做开发呢，要多思考，多总结，不要一味地埋头苦敲。&lt;/p&gt;
&lt;p&gt;iOS SDK 为我们封装了很多属性和方法，我们在调用这些属性和方法的时候，不要只图方便，也要多思考系统方法的实现。&lt;/p&gt;
&lt;p&gt;死记知识点这种做法太傻，你也记不住，&lt;strong&gt;在理解中学习才是最好的成长方式。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;附：Demo-参考&quot;&gt;&lt;a href=&quot;#附：Demo-参考&quot; class=&quot;headerlink&quot; title=&quot;附：Demo 参考&quot;&gt;&lt;/a&gt;附：Demo 参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/LeoiOS/UIAlertViewDemo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/LeoiOS/UIAlertViewDemo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;另附上完整的开源框架：&lt;a href=&quot;https://github.com/LeoiOS/LCActionSheet&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LCActionSheet&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;联系与捐赠&quot;&gt;&lt;a href=&quot;#联系与捐赠&quot; class=&quot;headerlink&quot; title=&quot;联系与捐赠&quot;&gt;&lt;/a&gt;联系与捐赠&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Mail: devtip#163.com&lt;/li&gt;
&lt;li&gt;GitHub:    &lt;a href=&quot;https://github.com/LeoiOS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LeoiOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果你想对我的开发或是开源项目进行支持捐助，请扫描下方二维码，谢谢！👇&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/alipay.png&quot; alt=&quot;LEO&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;前段时间在写 &lt;a href=&quot;https://github.com/LeoiOS/LCActionSheet&quot;&gt;LCActionSheet&lt;/a&gt; 这个库的时候，收到一个老兄 &lt;a href=&quot;https://github.com/weiwei1035&quot;&gt;weiwei1035&lt;/a&gt; 提到的一个 UIWindow 相关的 &lt;a href=&quot;https://github.com/LeoiOS/LCActionSheet/issues/1&quot;&gt;Issue&lt;/a&gt;，说：当 &lt;code&gt;statusBarStyle&lt;/code&gt; 为 &lt;code&gt;UIStatusBarStyleLightContent&lt;/code&gt; 时，背景不会遮挡 &lt;code&gt;statusBar&lt;/code&gt;。这位老兄还很热情地写了解决方案，并 &lt;a href=&quot;https://github.com/LeoiOS/LCActionSheet/pull/2&quot;&gt;pr&lt;/a&gt; 给了我，我简单验证过就愉快的合并了。&lt;/p&gt;
&lt;p&gt;我就喜欢这种提了问题自己想解决方案最后还能让我少写些代码的人，再次表扬。&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;但，凡事要知其然，也要知其所以然。&lt;/blockquote&gt;

&lt;p&gt;作为一名具有高度责（hao）任（qi）感（xin）的 Coder，我会把这事就这么简单放过吗？当然不会！后来我仔细想了想这个 Issue，思考了这个 window 的必要性：就为了一个 UI 效果搞这么复杂真的有必要吗？&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://note.leodev.me/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://note.leodev.me/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>【Mac 技巧】怎么样把 &quot;Downloads&quot; 文件夹命名为 &quot;下载&quot;？</title>
    <link href="http://note.leodev.me/2015/12/21/%5BMac-Tip%5D-How-To-Name-The-Local-Downloads-Folder/"/>
    <id>http://note.leodev.me/2015/12/21/[Mac-Tip]-How-To-Name-The-Local-Downloads-Folder/</id>
    <published>2015-12-21T13:19:23.000Z</published>
    <updated>2016-03-04T06:59:52.000Z</updated>
    
    <content type="html">&lt;p&gt;Mac 用着用着可能会出一些奇奇怪怪的 Bug，就比如下载文件夹突然就命名为 “Downloads”，怎么搞呢？&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;简单！打开 Vim，输入以下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;touch ~/Downloads/.localized&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Done!&lt;/p&gt;
&lt;h2 id=&quot;联系与捐赠&quot;&gt;&lt;a href=&quot;#联系与捐赠&quot; class=&quot;headerlink&quot; title=&quot;联系与捐赠&quot;&gt;&lt;/a&gt;联系与捐赠&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Mail: devtip#163.com&lt;/li&gt;
&lt;li&gt;GitHub:    &lt;a href=&quot;https://github.com/LeoiOS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LeoiOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果你想对我的开发或是开源项目进行支持捐助，请扫描下方二维码，谢谢！👇&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/alipay.png&quot; alt=&quot;LEO&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Mac 用着用着可能会出一些奇奇怪怪的 Bug，就比如下载文件夹突然就命名为 “Downloads”，怎么搞呢？&lt;/p&gt;
    
    </summary>
    
      <category term="Mac" scheme="http://note.leodev.me/categories/Mac/"/>
    
      <category term="技巧" scheme="http://note.leodev.me/categories/Mac/%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="Mac" scheme="http://note.leodev.me/tags/Mac/"/>
    
      <category term="技巧" scheme="http://note.leodev.me/tags/%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>【iOS】使用 AFNetworking 如何设置 HTTP Header</title>
    <link href="http://note.leodev.me/2015/12/15/%5BiOS%5D-How-To-Setting-HTTP-Header-With-AFNetworking/"/>
    <id>http://note.leodev.me/2015/12/15/[iOS]-How-To-Setting-HTTP-Header-With-AFNetworking/</id>
    <published>2015-12-15T09:34:53.000Z</published>
    <updated>2016-03-04T06:59:56.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/AFNetworking/AFNetworking&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AFNetworking&lt;/a&gt; 是 &lt;a href=&quot;http://github.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt; 上一个非常著名的开源项目，也是 iOS 开发最常用的网络库之一，因其强大的性能和友好的 API 而深受广大开发者们的喜爱和支持。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;在 iOS 开发中，有时我们发起一个请求，需要设置 HTTP Header。那么在使用 AFNetworking 的情况下，该如何设置呢？&lt;/p&gt;
&lt;p&gt;简单，下面直接上代码。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;AFNetworking 3.0&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[manager.requestSerializer setValue:&lt;span class=&quot;string&quot;&gt;@&quot;iOS&quot;&lt;/span&gt; forHTTPHeaderField:&lt;span class=&quot;string&quot;&gt;@&quot;appType&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AFNetworking 2.0&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;AFHTTPRequestOperationManager *manager = [AFHTTPRequestOperationManager manager];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[manager.requestSerializer setValue:&lt;span class=&quot;string&quot;&gt;@&quot;iOS&quot;&lt;/span&gt; forHTTPHeaderField:&lt;span class=&quot;string&quot;&gt;@&quot;appType&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Done！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;就这么几行代码，简单吧！~&lt;/p&gt;
&lt;h2 id=&quot;联系与捐赠&quot;&gt;&lt;a href=&quot;#联系与捐赠&quot; class=&quot;headerlink&quot; title=&quot;联系与捐赠&quot;&gt;&lt;/a&gt;联系与捐赠&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Mail: devtip#163.com&lt;/li&gt;
&lt;li&gt;GitHub:    &lt;a href=&quot;https://github.com/LeoiOS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LeoiOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果你想对我的开发或是开源项目进行支持捐助，请扫描下方二维码，谢谢！👇&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/alipay.png&quot; alt=&quot;LEO&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/AFNetworking/AFNetworking&quot;&gt;AFNetworking&lt;/a&gt; 是 &lt;a href=&quot;http://github.com&quot;&gt;GitHub&lt;/a&gt; 上一个非常著名的开源项目，也是 iOS 开发最常用的网络库之一，因其强大的性能和友好的 API 而深受广大开发者们的喜爱和支持。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://note.leodev.me/categories/iOS/"/>
    
      <category term="技巧" scheme="http://note.leodev.me/categories/iOS/%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="iOS" scheme="http://note.leodev.me/tags/iOS/"/>
    
      <category term="技巧" scheme="http://note.leodev.me/tags/%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>【Mac 技巧】开启适用于 Force Touch 触控板的“三指拖移”</title>
    <link href="http://note.leodev.me/2015/12/14/%5BMac-Tip%5D-Three-Finger-Drag-For-Force-Touch/"/>
    <id>http://note.leodev.me/2015/12/14/[Mac-Tip]-Three-Finger-Drag-For-Force-Touch/</id>
    <published>2015-12-14T08:10:10.000Z</published>
    <updated>2016-03-04T06:57:25.000Z</updated>
    
    <content type="html">&lt;p&gt;新的 MBP 到手了先别激动，除了超清的屏幕，还有什么变化呢？&lt;br&gt;有！的确有！之前很常用的“三指拖移”突然就不见了？！&lt;br&gt;这可是很爽的一个功能，真的就这么被取消了吗？苹果真的这么反人类吗？答案——NO！&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;在没有配备 Force Touch 的 Mac 上，可以直接前往“系统偏好设置”的“触控板”中开启“三指拖移”功能哦~&lt;/p&gt;
&lt;p&gt;But，重点在于，鸟枪换炮的同志们，激动地打开新的 MBP，然后更加激动地发现在“触控板”中根本没有“三指拖移”的选项了，RLGL？！&lt;/p&gt;
&lt;p&gt;但是伟大的毛主席曾经教导过我们，最后的胜利往往在于再坚持一下的努力之中！于是，本着坚韧的革命主义精神，终于被我发掘出来在配备 Force Touch 的 Mac 上开启“三指拖移”的方法！&lt;/p&gt;
&lt;h2 id=&quot;开启方法&quot;&gt;&lt;a href=&quot;#开启方法&quot; class=&quot;headerlink&quot; title=&quot;开启方法&quot;&gt;&lt;/a&gt;开启方法&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;打开“系统偏好设置”-&amp;gt;“辅助功能”&lt;br&gt;&lt;img src=&quot;/blogImg/20151214/01.png&quot; alt=&quot;By Leo&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在左边找到“鼠标与触控板”-&amp;gt;“触控板选项”&lt;br&gt;&lt;img src=&quot;/blogImg/20151214/02.png&quot; alt=&quot;By Leo&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点击“启动拖移”，选择“三指拖移”，&lt;strong&gt;然后点“好”然后点“好”然后点“好”&lt;/strong&gt; 重要的事说三遍！&lt;br&gt;&lt;img src=&quot;/blogImg/20151214/03.png&quot; alt=&quot;By Leo&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Done!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;终于把“三指拖移”功能找回！简直感动哭有木有！ꉂ ೭(˵¯̴͒ꇴ¯̴͒˵)౨”&lt;/p&gt;
&lt;h2 id=&quot;联系与捐赠&quot;&gt;&lt;a href=&quot;#联系与捐赠&quot; class=&quot;headerlink&quot; title=&quot;联系与捐赠&quot;&gt;&lt;/a&gt;联系与捐赠&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Mail: devtip#163.com&lt;/li&gt;
&lt;li&gt;GitHub:    &lt;a href=&quot;https://github.com/LeoiOS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LeoiOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;土豪捐赠通道: 👇&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/alipay.png&quot; alt=&quot;Alipay&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;新的 MBP 到手了先别激动，除了超清的屏幕，还有什么变化呢？&lt;br&gt;有！的确有！之前很常用的“三指拖移”突然就不见了？！&lt;br&gt;这可是很爽的一个功能，真的就这么被取消了吗？苹果真的这么反人类吗？答案——NO！&lt;/p&gt;
    
    </summary>
    
      <category term="Mac" scheme="http://note.leodev.me/categories/Mac/"/>
    
      <category term="技巧" scheme="http://note.leodev.me/categories/Mac/%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="Mac" scheme="http://note.leodev.me/tags/Mac/"/>
    
      <category term="技巧" scheme="http://note.leodev.me/tags/%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>【iOS】开发笔记（一）</title>
    <link href="http://note.leodev.me/2015/12/11/%5BiOS%5D-Development-Notes-1/"/>
    <id>http://note.leodev.me/2015/12/11/[iOS]-Development-Notes-1/</id>
    <published>2015-12-11T04:39:29.000Z</published>
    <updated>2016-03-04T07:00:03.000Z</updated>
    
    <content type="html">&lt;p&gt;分享一些常见的知识点，对初学者可能帮助更大，因为这些知识点都是我刚接触 iOS 开发时容易搞坏事的东西。当然现在开发时也会偶尔一时想不起来一些东西，唉，老了~&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;【一】iPhone-尺寸&quot;&gt;&lt;a href=&quot;#【一】iPhone-尺寸&quot; class=&quot;headerlink&quot; title=&quot;【一】iPhone 尺寸&quot;&gt;&lt;/a&gt;【一】iPhone 尺寸&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/blogImg/20151211/01.jpg&quot; alt=&quot;By Leo&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;【二】PCH-路径配置&quot;&gt;&lt;a href=&quot;#【二】PCH-路径配置&quot; class=&quot;headerlink&quot; title=&quot;【二】PCH 路径配置&quot;&gt;&lt;/a&gt;【二】PCH 路径配置&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/blogImg/20151211/02.png&quot; alt=&quot;By Leo&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;【三】UIScrollView-属性&quot;&gt;&lt;a href=&quot;#【三】UIScrollView-属性&quot; class=&quot;headerlink&quot; title=&quot;【三】UIScrollView 属性&quot;&gt;&lt;/a&gt;【三】UIScrollView 属性&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/blogImg/20151211/03.png&quot; alt=&quot;By Leo&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;【四】NavigationBar-属性&quot;&gt;&lt;a href=&quot;#【四】NavigationBar-属性&quot; class=&quot;headerlink&quot; title=&quot;【四】NavigationBar 属性&quot;&gt;&lt;/a&gt;【四】NavigationBar 属性&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/blogImg/20151211/04.png&quot; alt=&quot;By Leo&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;【五】VC-创建优先级&quot;&gt;&lt;a href=&quot;#【五】VC-创建优先级&quot; class=&quot;headerlink&quot; title=&quot;【五】VC 创建优先级&quot;&gt;&lt;/a&gt;【五】VC 创建优先级&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/blogImg/20151211/05.png&quot; alt=&quot;By Leo&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;【六】VC-生命周期&quot;&gt;&lt;a href=&quot;#【六】VC-生命周期&quot; class=&quot;headerlink&quot; title=&quot;【六】VC 生命周期&quot;&gt;&lt;/a&gt;【六】VC 生命周期&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/blogImg/20151211/06.png&quot; alt=&quot;By Leo&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;【七】启动图片的命名规范&quot;&gt;&lt;a href=&quot;#【七】启动图片的命名规范&quot; class=&quot;headerlink&quot; title=&quot;【七】启动图片的命名规范&quot;&gt;&lt;/a&gt;【七】启动图片的命名规范&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/blogImg/20151211/07.png&quot; alt=&quot;By Leo&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;【八】程序启动的完整过程&quot;&gt;&lt;a href=&quot;#【八】程序启动的完整过程&quot; class=&quot;headerlink&quot; title=&quot;【八】程序启动的完整过程&quot;&gt;&lt;/a&gt;【八】程序启动的完整过程&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;main 函数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;UIApplicationMain&lt;/p&gt;
&lt;p&gt; 2.1 创建 UIApplication 对象&lt;br&gt; 2.2 创建 UIApplication 的 delegate 对象&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;delegate 对象开始处理 (监听) 系统事件 (&lt;strong&gt;没有 storyboard&lt;/strong&gt;)&lt;/p&gt;
&lt;p&gt;3.1 程序启动完毕的时候, 就会调用代理的 application:didFinishLaunchingWithOptions: 方法&lt;br&gt;3.2 在 application:didFinishLaunchingWithOptions: 中创建 UIWindow&lt;br&gt;3.3 创建和设置 UIWindow 的 rootViewController&lt;br&gt;3.4 显示窗口&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;根据 Info.plist 获得最主要 storyboard 的文件名,加载最主要的 storyboard (&lt;strong&gt;有 storyboard&lt;/strong&gt;)&lt;/p&gt;
&lt;p&gt; 4.1 创建 UIWindow&lt;br&gt; 4.2 创建和设置 UIWindow 的 rootViewController&lt;br&gt; 4.3 显示窗口&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;【九】UIPickerView-和-UIDatePicker-属性和方法&quot;&gt;&lt;a href=&quot;#【九】UIPickerView-和-UIDatePicker-属性和方法&quot; class=&quot;headerlink&quot; title=&quot;【九】UIPickerView 和 UIDatePicker 属性和方法&quot;&gt;&lt;/a&gt;【九】UIPickerView 和 UIDatePicker 属性和方法&lt;/h2&gt;&lt;p&gt;一. UIPickerView&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;UIPickerView 的常见属性&lt;/p&gt;
 &lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 数据源 (用来告诉 UIPickerView 有多少列多少行)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;assign&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;UIPickerViewDataSource&lt;/span&gt;&amp;gt; dataSource;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 代理 (用来告诉 UIPickerView 每 1 列的每 1 行显示什么内容, 监听 UIPickerView 的选择)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;assign&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;UIPickerViewDelegate&lt;/span&gt;&amp;gt;   delegate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 是否要显示选中的指示器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;)        &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;                       showsSelectionIndicator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 一共有多少列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;readonly&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt; numberOfComponents;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;UIPickerView 的常见方法&lt;/p&gt;
 &lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 重新刷新所有列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)reloadAllComponents;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 重新刷新第 component 列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)reloadComponent:(&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)component;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 主动选中第 component 列的第 row 行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)selectRow:(&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)row inComponent:(&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)component animated:(&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)animated;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 获得第 component 列的当前选中的行号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)selectedRowInComponent:(&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)component;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数据源方法 (UIPickerViewDataSource)&lt;/p&gt;
 &lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 一共有多少列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)numberOfComponentsInPickerView:(&lt;span class=&quot;built_in&quot;&gt;UIPickerView&lt;/span&gt; *)pickerView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 第 component 列一共有多少行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)pickerView:(&lt;span class=&quot;built_in&quot;&gt;UIPickerView&lt;/span&gt; *)pickerView numberOfRowsInComponent:(&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)component;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;代理方法 (UIPickerViewDelegate)&lt;/p&gt;
 &lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 第 component 列的宽度是多少&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt;)pickerView:(&lt;span class=&quot;built_in&quot;&gt;UIPickerView&lt;/span&gt; *)pickerView widthForComponent:(&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)component;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 第 component 列的行高是多少&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt;)pickerView:(&lt;span class=&quot;built_in&quot;&gt;UIPickerView&lt;/span&gt; *)pickerView rowHeightForComponent:(&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)component;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 第 component 列第 row 行显示什么文字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)pickerView:(&lt;span class=&quot;built_in&quot;&gt;UIPickerView&lt;/span&gt; *)pickerView titleForRow:(&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)row forComponent:(&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)component;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 第 component 列第 row 行显示怎样的 view (内容)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIView&lt;/span&gt; *)pickerView:(&lt;span class=&quot;built_in&quot;&gt;UIPickerView&lt;/span&gt; *)pickerView viewForRow:(&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)row forComponent:(&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)component reusingView:(&lt;span class=&quot;built_in&quot;&gt;UIView&lt;/span&gt; *)view;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 选中了 pickerView 的第 component 列第 row 行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)pickerView:(&lt;span class=&quot;built_in&quot;&gt;UIPickerView&lt;/span&gt; *)pickerView didSelectRow:(&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)row inComponent:(&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)component;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;二. UIDatePicker&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;UIDatePicker 常见属性&lt;/p&gt;
 &lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// datePicker 的显示模式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;UIDatePickerMode&lt;/span&gt; datePickerMode;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 显示的区域语言&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, retain) &lt;span class=&quot;built_in&quot;&gt;NSLocale&lt;/span&gt;   *locale;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;监听 UIDatePicker 的选择&lt;/p&gt;
 &lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 因为 UIDatePicker 继承自 UIControl, 所以通过 addTarget:... 监听&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;知乎体&quot;&gt;&lt;a href=&quot;#知乎体&quot; class=&quot;headerlink&quot; title=&quot;知乎体&quot;&gt;&lt;/a&gt;知乎体&lt;/h2&gt;&lt;p&gt;一个典型的知乎体就是：&lt;/p&gt;
&lt;p&gt;“谢邀。” 开头。&lt;/p&gt;
&lt;p&gt;“以上。” 结尾。&lt;/p&gt;
&lt;h2 id=&quot;联系与捐赠&quot;&gt;&lt;a href=&quot;#联系与捐赠&quot; class=&quot;headerlink&quot; title=&quot;联系与捐赠&quot;&gt;&lt;/a&gt;联系与捐赠&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Mail: devtip#163.com&lt;/li&gt;
&lt;li&gt;GitHub:    &lt;a href=&quot;https://github.com/LeoiOS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LeoiOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果你想对我的开发或是开源项目进行支持捐助，请扫描下方二维码，谢谢！👇&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/alipay.png&quot; alt=&quot;LEO&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;以上。&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;分享一些常见的知识点，对初学者可能帮助更大，因为这些知识点都是我刚接触 iOS 开发时容易搞坏事的东西。当然现在开发时也会偶尔一时想不起来一些东西，唉，老了~&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://note.leodev.me/categories/iOS/"/>
    
      <category term="笔记" scheme="http://note.leodev.me/categories/iOS/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="iOS" scheme="http://note.leodev.me/tags/iOS/"/>
    
      <category term="笔记" scheme="http://note.leodev.me/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Hello Hexo</title>
    <link href="http://note.leodev.me/2015/12/07/Hello-Hexo/"/>
    <id>http://note.leodev.me/2015/12/07/Hello-Hexo/</id>
    <published>2015-12-07T05:45:18.000Z</published>
    <updated>2016-03-04T06:57:43.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://LeoDev.me&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://LeoDev.me&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;从此以后安家于此。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;Hello Hexo!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;期待 12.12！My new MacBook Pro 15’ 512g！&lt;/p&gt;
&lt;h2 id=&quot;联系&quot;&gt;&lt;a href=&quot;#联系&quot; class=&quot;headerlink&quot; title=&quot;联系&quot;&gt;&lt;/a&gt;联系&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Mail: devtip#163.com&lt;/li&gt;
&lt;li&gt;GitHub:    &lt;a href=&quot;https://github.com/LeoiOS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LeoiOS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://LeoDev.me&quot;&gt;http://LeoDev.me&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;从此以后安家于此。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;Hello Hexo!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Hello" scheme="http://note.leodev.me/categories/Hello/"/>
    
    
      <category term="Hello" scheme="http://note.leodev.me/tags/Hello/"/>
    
  </entry>
  
  <entry>
    <title>【iOS】面试题</title>
    <link href="http://note.leodev.me/2014/08/20/%5BiOS%5D-Interview-Questions/"/>
    <id>http://note.leodev.me/2014/08/20/[iOS]-Interview-Questions/</id>
    <published>2014-08-20T01:29:30.000Z</published>
    <updated>2016-03-04T06:57:14.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;面试题这种东西，你看或者不看，它就在那里，不增不减。&lt;/p&gt;
&lt;p&gt;面试官这种生物，你喜或者不喜，他就在那里，静候佳音。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2 id=&quot;【第一部分】-通用面试题&quot;&gt;&lt;a href=&quot;#【第一部分】-通用面试题&quot; class=&quot;headerlink&quot; title=&quot;【第一部分】 通用面试题&quot;&gt;&lt;/a&gt;【第一部分】 通用面试题&lt;/h2&gt;&lt;p&gt;1、即时聊天App不会采用的网络传输方式是    &lt;strong&gt;D&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A UDP B TCP C HTTP D FTP
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;2、下列技术不属于多线程的是       &lt;strong&gt;A&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A Block B NSThread C NSOperation D GCD
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;3、线程和进程的区别不正确的是  &lt;strong&gt;B&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A 进程和线程都是由操作系统所体会的程序运行的基本单元

B 线程之间有单独的地址空间

C 进程和线程的主要差别在于它们是不同的操作系统资源管理方式

D 线程有自己的堆栈和局部变量
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;4、堆和栈的区别正确的是 &lt;strong&gt;D&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A 对于栈来讲，我们需要手工控制，容易产生memory leak

B 对于堆来说，释放工作由编译器自动管理，无需我们手工控制

C 在Windows下,栈是向高地址扩展的数据结构，是连续的内存区域，栈顶的地址和栈的最大容量是系统预先规定好的

D 对于堆来讲，频繁的new/delete势必会造成内存空间的不连续，从而造成大量的碎片，使程序效率降低
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;5、下列回调机制的理解不正确的是   &lt;strong&gt;B&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A 目标动作对：当两个对象之间有⽐比较紧密的关系时，如视图控制器与其下的某个视图。       

B 代理：也叫委托，当某个对象收到多个事件，并要求同一个对象来处理所有事件时。委托机制必须依赖于某个协议定义的⽅法来发送消息。       

C 通告机制：当需要多个对象或两个⽆无关对象处理同一个事件时。       

D Block：适⽤于回调只发⽣生一次的简单任务。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;6、对于runloop的理解不正确的是 &lt;strong&gt;C&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A 每一个线程都有其对应的RunLoop

B 默认非主线程的RunLoop是没有运行的

C 在一个单独的线程中没有必要去启用RunLoop

D 可以将NSTimer添加到runloop中
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;7、UITableView中cell的复用是由几个数组实现的 &lt;strong&gt;B&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A 1 B 2  C 3 D 3或4
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;8、在线播放视频一般访问服务器中的（ ）类型文件   &lt;strong&gt;A&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A M3U8 B flv C MP4 D data
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;9、点击Button响应链中最终得到响应的是 &lt;strong&gt;B&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A Window B Application C AppDelegate D UIViewController
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;10、内存管理理解不正确的是          &lt;strong&gt;B&lt;/strong&gt;                                                       &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A 程序A里有一段内存被成功申请完成之后，内存计数器就从0变为1 (这个过程是alloc);  

B 程序B里要使用已存在内存，那么内存计数器从1变为2 (这个过程是retain或者copy);  

C 紧接着程序A不需要这个内存了，那么程序A就把这个内存计数器减1 (这个过程是release);  

D 当系统发现这个内存计数器变为小于等于0，那么就调用垃圾回收程序把这段内存回收(这个过程是dealloc)；
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;11、断点续传需要在请求头中添加的控制续传最重要的关键字是 &lt;strong&gt;A&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A range B length C type D size
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;12、post传输的最大文件限制为 &lt;strong&gt;C&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A 1G B 2G C 4G  D 8G
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;13、MVC优点不正确的是  &lt;strong&gt;D&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A 低耦合性

B 高重用性和可适用性

C 较低的生命周期成本

D 代码高效率
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;【第二部分】-推荐面试题&quot;&gt;&lt;a href=&quot;#【第二部分】-推荐面试题&quot; class=&quot;headerlink&quot; title=&quot;【第二部分】 推荐面试题&quot;&gt;&lt;/a&gt;【第二部分】 推荐面试题&lt;/h2&gt;&lt;h3 id=&quot;1-10-C语言-amp-计算机基础&quot;&gt;&lt;a href=&quot;#1-10-C语言-amp-计算机基础&quot; class=&quot;headerlink&quot; title=&quot;1-10 C语言 &amp;amp; 计算机基础&quot;&gt;&lt;/a&gt;1-10 C语言 &amp;amp; 计算机基础&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;1、请看下面一段代码&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;static int a = 1;

int main() {

    int b = 2;

    char *c = NULL;

    c = (char *)malloc(100 * sizeof(char));

    return 0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;请问访问a,b,c 3种类型变量的效率从高到低依次是&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. cba

B. abc

C. acb

D. bca
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;B&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2、下面四种内部排序算法中哪一种在最差情况下时间复杂度最高？&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. 快速排序

B. 冒泡排序

C. 堆排序

D. 归并排序
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;B&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;3、Shell中，将command1的输出作为command2的输入应该使用的命令是&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. command1 &amp;amp;&amp;amp; command2

B. command1 &amp;gt; command2

C. command1 &amp;amp; command2

D. command1 | command2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;D&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;4、下面的数据结构中不属于线性结构的是&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. 栈

B. 链表

C. 二叉树

D. 线性表
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;C&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;5、在一个二叉树上，第5层最多可以有的节点数是&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. 2

B. 8

C. 16

D. 32
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;C&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;6、在长度为n的线性表上进行顺序查找，在最糟糕的情况下需要的比较次数是&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. n

B. 2n-1

C. 2n

D. n^2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;7、下面那项不是动态语言的特性&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. 在运行时替换一个类

B. 在运行时动态加载lib文件

C. 在运行时修改对象中的方法

D. 在运行时增加对象的方法
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;B&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;8、已知二叉树后序遍历序列是dabec，中序遍历序列是debac，它的前序遍历序列是&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. cedba

B. acbed

C. decab

D. deabc
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;9、以下多线程对int型变量x的操作，哪个不需要进行同步：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. x=y

B. x++

C. ++x

D. x=1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;D&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;10、多线程中栈与堆是公有的还是私有的&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. 栈公有, 堆私有

B. 栈公有，堆公有

C. 栈私有, 堆公有

D. 栈私有，堆私有
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;C&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;11-20-Objective-C-amp-Xcode&quot;&gt;&lt;a href=&quot;#11-20-Objective-C-amp-Xcode&quot; class=&quot;headerlink&quot; title=&quot;11-20 Objective-C &amp;amp; Xcode&quot;&gt;&lt;/a&gt;11-20 Objective-C &amp;amp; Xcode&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;11、在Xcode中，需要编译混合Objective-C和C++的源码文件，需要将文件格式的后缀改为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. .c

B. .cpp

C. .mm

D. .m
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;C&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;12、Objective-C声明一个类所要用到的编译指令是&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. @interface SomeClass

B. @protocol SomeClass

C. @implementation SomeClass

D. @autorelease SomeClass
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;13、使用Xcode创建工程时，支持同时创建的版本管理库是&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. Subversion

B. Mercurial

C. Git

D. Concurrent Versions System
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;C&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;14、下面那个方法不属于NSObject的内省（Introspection）方法&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. init

B. isKindOfClass

C. responseToSelector

D. isMemberOfClass
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;15、使用protocol时，声明一组可选择实现与否的函数，需要在声明的前一行加上：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. @required

B. @optional

C. @interface

D. @protocol
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;B&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;@required 是必须实现，它的代理必须实现协议中的 @required 方法。&lt;/p&gt;
&lt;p&gt;如果不声明 @optional，默认 @required。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;16、需要在手动管理内存分配和释放的Xcode项目中引入和编译用ARC风格编写的文件，需要在文件的Compiler Flags上添加参数：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. -shared

B. -fno-objc-arc

C. -fobjc-arc

D. -dynamic
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;C&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MRC中引入ARC文件：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-fobjc-arc
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ARC中引入MRC文件：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-fno-objc-arc
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;17、下面关于Objective-C内存管理的描述错误的是&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. 当使用ARC来管理内存时，代码中不可以出现autorelease

B. autoreleasepool 在 drain 的时候会释放在其中分配的对象

C. 当使用ARC来管理内存时，在线程中大量分配对象而不用autoreleasepool则可能会造成内存泄露

D. 在使用ARC的项目中不能使用NSZone
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;18、下面关于#import和#include的描述正确的是&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. #import 是 #include 的替代指令，防止重复引用

B. #import 和 #include 不可以混合使用

C. #import 只用于引用 Objective-C的文件，#include 只用于引用C和C++的文件

D. #import 和 #include 的使用效果完全相同
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;19、下面的代码问题在哪？&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@implementation xxx
…
…
- (void) setVar:(int)i {

     self.var = i;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;答案是：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. 应该将var synthesize

B. 调用会出现死循环

C. 正常

D. 返回值错误
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;B&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;20、下面那个方法可以比较两个 NSString *str1, *str2 的异同&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. if(str1 = str2) xxx ;

B. if([str1 isEqualToString:str2]) xxx ;

C. if(str1 &amp;amp;&amp;amp; str2) xxx ;

D. if([str1 length] == [str2 length]) xxx;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;B&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;21-30-iOS&quot;&gt;&lt;a href=&quot;#21-30-iOS&quot; class=&quot;headerlink&quot; title=&quot;21-30 iOS&quot;&gt;&lt;/a&gt;21-30 iOS&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;21、下面哪个不属于对象数据序列化方法&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. JSON

B. Property List

C. XML

D. HTTP
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;D&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;22、在UIKit中，frame与bounds的区别是&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. frame 是 bounds 的别名

B. frame 是 bounds 的继承类

C. frame 的参考系是父视图坐标，bounds 的参考系是自身的坐标

D. frame 的参考系是自身坐标，bounds 的参考系是父视图的坐标
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;C&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;23、Objective-C有私有方法吗？有私有变量吗？&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. 有私有方法和私有变量

B. 没有私有方法也没有私有变量

C. 没有私有方法，有私有变量

D. 有私有方法，没有私有变量
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;C&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里选C是有疑点的。&lt;/p&gt;
&lt;p&gt;私有变量不用说了，在.m里面匿名声明的就是私有变量了。&lt;/p&gt;
&lt;p&gt;私有方法则是值得推敲的。其实在.m里面不声明直接实现的方法，从效果上来讲，应该也能算是私有方法了，因为包括它的子类在内的其他类，都是无法访问该方法的。当然，称之为“隐藏方法”或许更好。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;24、下面关于线程管理错误的是&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. GCD所用的开销要比NSThread大

B. 可以在子线程中修改UI元素

C. NSOperationQueue是比NSthread更高层的封装

D. GCD可以根据不同优先级分配线程
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;B&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;25、下面代码的作用是让doSomeThing函数每隔1秒被调用1次。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;NSTimer *myTimer = [NSTimer timerWithTimeInterval:1.0f target:self selector:@selector(doSomething:) userInfo:nil repeats:YES];

[myTimer fire];
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;请问哪里有问题？&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. 没有将timer加入runloop

B. doSomeThing缺少参数

C. 忘记传递数据给userInfo

D. myTimer对象未通过[[myTimer alloc] init]方法初始化
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;26、UIViewController在显示过程中，各个方法的调用顺序是&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. init -&amp;gt; viewDidLoad -&amp;gt; viewDidAppear -&amp;gt; viewDidUnload

B. init -&amp;gt; viewDidAppear -&amp;gt; viewDidLoad -&amp;gt; viewDidUnload

C. init -&amp;gt; viewDidLoad -&amp;gt; viewDidUnload -&amp;gt; viewDidAppear

D. init -&amp;gt; viewDidAppear -&amp;gt; viewDidUnload -&amp;gt; viewDidLoad
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;viewDidUnload 在iOS5.0之后不再生效，类似的方法：&lt;/p&gt;
&lt;p&gt;didReceiveMemoryWarning // 接收到内存警告时调用&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;官方文档：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- viewDidUnload (iOS 6.0)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Called when the controller’s view is released from memory.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Deprecation Statement&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Views are no longer purged under low-memory conditions and so this method is never called.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Declaration&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*OBJECTIVE-C*

- (void)viewDidUnload
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Discussion&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In iOS 5 and earlier, when a low-memory condition occurred and the current view controller’s views were not needed, the system could opt to call this method after the view controller’s view had been released. This method was your chance to perform any final cleanup. If your view controller stored separate references to the view or its subviews, you could use this method to release those references. You could also use this method to remove references to any objects that you created to support the view but that are no longer needed now that the view is gone. You would not use this method to release user data or any other information that cannot be easily recreated.&lt;/p&gt;
&lt;p&gt;In iOS 6 and later, clearing references to views and other objects in your view controller is unnecessary.&lt;/p&gt;
&lt;p&gt;At the time this method is called, the view property is nil.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Availability&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Available in iOS 3.0 and later.&lt;/p&gt;
&lt;p&gt;Deprecated in iOS 6.0.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;27、使用imageNamed方法创建UIImage对象时，与普通的init方法有什么区别？&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. 没有区别，只是为了方便

B. imageNamed方法只是创建了一个指针，没有分配其他内存

C. imageNamed方法将图片加载到内存中后不再释放

D. imageNamed方法将使用完图片后立即释放
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;C&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;28、一个类的delegate（代理）的作用不正确的是&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. delegate中的函数在其他类中实现

B. 主要用于不同类型的对象之间一对一传递消息

C. 没有指派则不会触发

D. 可以一个对象的delegate指派给多个其他类型的对象
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;D&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;29、在没有navigationController的情况下，要从一个ViewController切换到另一个ViewController应该&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. [self.navigationController pushViewController:nextViewController animated:YES];

B. [self.view addSubview:nextViewController.view];

C. [self pushViewController:nextViewController animated:YES];

D. [self presentModalViewController:nextViewController animated:YES];
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;D&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;从iOS5.0开始，D项应该更新为&lt;/p&gt;
&lt;p&gt;[self presentViewController:nextViewController animated:YES completion:nil];&lt;/p&gt;
&lt;p&gt;presentModalViewController:animated:iOS6.0已过期&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;官方文档：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- presentModalViewController:animated: (iOS 6.0)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Presents a modal view managed by the given view controller to the user.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Deprecation Statement&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;presentViewController:animated:completion:&lt;/code&gt; instead.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;30、什么是key window？&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. App中唯一的那个UIWindow对象

B. 可以指定一个key的UIWindow

C. 可接收到键盘输入等事件的UIWindow

D. 不可以隐藏的那个UIWindow对象
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;C&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;官方文档：&lt;/p&gt;
&lt;p&gt;“The key window is the one that is designated to receive keyboard and other non-touch related events. Only one window at a time may be the key window.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;翻译过来就是说，keyWindow是指定的用来接收键盘以及非触摸类的消息，而且程序中每一个时刻只能有一个window是keyWindow。&lt;/p&gt;
&lt;p&gt;参考博文：&lt;a href=&quot;http://www.cnblogs.com/smileEvday/archive/2012/11/16/UIWindow.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UIWindow的一点儿思考&lt;/a&gt;–一片枫叶&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;31-39-代码&quot;&gt;&lt;a href=&quot;#31-39-代码&quot; class=&quot;headerlink&quot; title=&quot;31-39 代码&quot;&gt;&lt;/a&gt;31-39 代码&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;31、求以下程序段的输出&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;int test(int x, int y) {

    x = x + y;

    return x * y;
}

int main(int argc, const char * argv[]) {

    @autoreleasepool {

        int x = 3, y = 10, z = test(x, y);

        NSLog(@&amp;quot;%d%d&amp;quot;, x++, ++z);
    }

    return 0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;答案是   &lt;strong&gt;A&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A 331 B 330  C 431 D  430
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;32、求以下程序段的输出&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;int func(int x) {    

    int countx = 0;    

    while (x) {        

        countx++;        

        x = x&amp;amp;(x-1);    
    }    

    return countx;
}

int main(int argc, const char * argv[]) {    

    @autoreleasepool {        

        NSLog(@&amp;quot;%d&amp;quot;, func(2013));    
    }    

    return 0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;答案是  &lt;strong&gt;D&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A 1 B 5 C 8 D 9
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;33、下面说法不正确的是 &lt;strong&gt;C&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A readwrite 是可读可写特性；需要生成getter方法和setter方法时

B readonly 是只读特性  只会生成getter方法 不会生成setter方法 ;不希望属性在类外改变

C assign 是赋值特性，和weak一样，可用weak代替；

D retain 表示持有特性，setter方法将传入参数先保留，再赋值，传入参数的retaincount会+1;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;34、对于语句 NSString *obj = [[NSData alloc] init]; obj在编译时和运行时分别时什么类型的对象？ &lt;strong&gt;A&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A 编译时是NSString的类型；运行时是NSData类型的对象

B 编译时是NSObject的类型；运行时是NSData类型的对象

C 编译时是NSData的类型；运行时是NSString类型的对象

D 编译时是NSObject的类型；运行时是NSString类型的对象
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;35、Objective-C中的线程下面描述不正确的是  &lt;strong&gt;B&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A 使用NSThread创建，使用GCD的dispatch

B 直接使用NSOperation，然后将其加入NSOperationQueue

C 在主线程执行代码，方法是performSelectorOnMainThread

D 如果想延时执行代码可以用performSelector:onThread:withObject:waitUntilDone:
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;36、下列不属于iOS存储方式的是    &lt;strong&gt;A&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A NSFileManager   B 归档   C SQLite   D CoreData
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;37、IP Phone的原理是什么?       &lt;strong&gt;C&lt;/strong&gt;       &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A IPV4  B DHCP C IPV6  D DNS
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;38、类别的作用不正确的是 &lt;strong&gt;D&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A 将类的实现分散到多个不同文件或多个不同框架中。

B 创建对私有方法的前向引用。

C 向对象添加非正式协议。 继承可以增加，修改或者删除方法。

D 不能添加属性
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;39、对NSOperationQueue理解不正确的是 &lt;strong&gt;D&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A 存放NSOperation的集合类

B 可以设置最大并发数

C 放进去的线程会自动执行

D 用户需要管理放进去的线程执行顺序
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;结尾&quot;&gt;&lt;a href=&quot;#结尾&quot; class=&quot;headerlink&quot; title=&quot;结尾&quot;&gt;&lt;/a&gt;结尾&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;本文面试题收集自网络，解答如有偏颇，欢迎留言指正！&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;联系与捐赠&quot;&gt;&lt;a href=&quot;#联系与捐赠&quot; class=&quot;headerlink&quot; title=&quot;联系与捐赠&quot;&gt;&lt;/a&gt;联系与捐赠&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Mail: devtip#163.com&lt;/li&gt;
&lt;li&gt;GitHub:    &lt;a href=&quot;https://github.com/LeoiOS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LeoiOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;土豪捐赠通道: 👇&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/alipay.png&quot; alt=&quot;Alipay&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;面试题这种东西，你看或者不看，它就在那里，不增不减。&lt;/p&gt;
&lt;p&gt;面试官这种生物，你喜或者不喜，他就在那里，静候佳音。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://note.leodev.me/categories/iOS/"/>
    
      <category term="面试" scheme="http://note.leodev.me/categories/iOS/%E9%9D%A2%E8%AF%95/"/>
    
    
      <category term="iOS" scheme="http://note.leodev.me/tags/iOS/"/>
    
      <category term="面试" scheme="http://note.leodev.me/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
</feed>
